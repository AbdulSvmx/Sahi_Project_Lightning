
/**
 * SFM transaction & designer page object repository
 */
var $bo_pg_sfmTransactionAndDesigner = new function bo_pg_sfmTransactionAndDesigner() {
	
	
	/**
	 Added by Safi
	 */
	this.btn_mappings = _f("main").tab("Mapping(s)");
	this.btn_addMappings = _f("main").s_button("New[2]");
	this.btn_toggle = _f("main").s_togglebutton("I want to choose a field from the list[4]");
	
	this.selMapping = _f("main").s_combobox("searchCombo[2]");
	
	
	//this.txt_comboBox = _f("main").s_combobox("valuesCombo[1]");
	
	
	//this.btn_dropdown = _f("main").s_combobox("valuesCombo[1]");
	//this.lbl_tmrw = _f("main").s_label("Tomorrow");
	
	//this.btn_searchSelect = _f("main").s_button("Search and Select");
	//this.txt_accountSearch = _f("main").s_textinput("lookUpSearchField");
	//this.btn_accountSearch = _f("main").s_button("Button17181");
	//this.lbl_select = _f("main").listbasecontentholder(11);
	//this.btn_select = _f("main").s_button("Select");
	this.txt_mappingName = _f("main").s_textinput("Save this map as[1]");
	this.txt_mapID = _f("main").s_textinput("Input ID Here[2]");
	this.btn_saveMap = _f("main").s_button("Save[3]");

	 this.txt_standardSfmTransactionQuickFind= _f("main").s_textinput("/searchText/").near(_f("main").tab("Standard SFM Transactions")); //updated with relative index to properly identify quick find in standard transactions
    this.btn_standardSfmTransaction= _f("main").tab("Standard SFM Transactions");
    //this.btn_yourCustomSfmTransactions = _f("main").tab("Your Custom Sjavascript:void(0)FM Transactions");
    this.btn_yourCustomSfmTransactions = _f("main").tab("Your Custom SFM Transactions");
    this.txt_yourCustomSfmTransactionsQuickFind = _f("main").s_textinput("/searchText/").inside(_f("main").s_navigatorcontent("Your Custom SFM Transactions"));//updated with relative index to properly identify quick find in custom transactions
    this.btn_clone = _f("main").s_button("Clone");
    this.txt_name = _f("main").s_textinput("pName");
    this.txt_sfmTransactionId = _f("main").s_textinput("pId");
    this.btn_qualificationCriteriaTab=_f("main").tab("Qualification Criteria");
    this.btn_qualifyingCriteriaAndFieldMapping = _f("main").tab("Qualifying Criteria and Field Mappings");
    this.btn_screenDesigner = _f("main").tab("Screen Designer");
    this.btn_templateDesigner =  _f("main").tab("Template Designer");
    this.lbl_workOrder = _f("main").s_richtext("Work Order");
    this.sel_sfmTemplate = _f("main").s_combobox("searchCombo[3]");
    this.sel_sfmTemplateforOpDoc = _f("main").s_combobox("searchCombo[4]");//for OPDoc Template
    this.txt_sfmSavePageLayoutAs = _f("main").s_textinput("Save page layout as");
    this.txt_sfmSaveTemplateAs = _f("main").s_textinput("Save template as"); //for OP Doc Template
	this.txt_sfmSavePageLayoutID=_f("main").s_textinput("Input ID Here[3]");
	this.txt_sfmSaveTemplateLayoutID=_f("main").s_textinput("Input ID Here[4]");//for OPDoc Template
    this.txt_sfmSavePageLayoutAsId = _f("main").s_textinput("advTxt");
    this.btn_addFieldToPage = _f("main").s_button("Add Field to Page");
    this.txt_quickFindField = _f("main").s_textinput("searchText").near(_f("main").s_button("/Add Field/"));
    this.btn_quickSave = _f("main").s_button("Save As[3]");
    this.btn_savePage = _f("main").s_button("Save[3]");
    this.btn_quickSave1 = _f("main").s_button("Quick Save");
    this.btn_saveAndclose = _f("main").s_button("Save & Close");
    this.alert_sfm = _f("main").alert("Please enter a unique Page Name The page ID you have entered already exists. Please enter a unique ID");
    this.btn_ok = _f("main").button("OK");
    this.btn_backToList = _f("main").s_button("Back To List");
    this.btn_yes = _f("main").button("Yes");
    this.btn_newSFM=_f("main").s_button("New SFM Transaction").near(_f("main").tab("Standard SFM Transactions"));
	this.btn_finalQuickSave = _f("main").s_button("Quick Save");
	this.alert_proceedAnyway=_f("main").button("Proceed Anyway");	
	this.lbl_searchSFM=_f("main").s_textinput("searchText[3]");
	this.btn_clickDeleteButton=_f("main").s_button("Delete[4]");
	this.PopUpMessageConformationForDelete=_f("main").button("Yes");
	this.lbl_sfmTransactionSavedMessage=_f("main").label("SFM Transaction saved");	
	this.btn_pageLayoutSave=_f("main").s_button("/Save/").near(_f("main").s_textinput("Save page layout as"));
	this.btn_pageLayoutSaveAs=_f("main").s_button("Save As").rightOf(_f("main").s_textinput("Save page layout as"));
	this.btn_sfmpageSaveConfirmMsg=_f("main").uiftetextfield("Page saved");
	this.btn_moveToRight=_f("main").s_button("moveRightBtn");
	this.link_chklistQuestionLibrary=_div("Checklist Question Library");
	this.btn_deletePageLayout = _f("main").s_button("Delete[3]");
	this.btn_deleteSfmProcess = _f("main").s_button("Delete").rightOf(_f("main").s_button("Clone"));
	//This code is to click on new button on custom SFM transaction
	this.btn_newSFMTransaction=_f("main").s_button("New SFM Transaction");//duplicate	
	//This function is to select a checklist SFM time from drop down
	this.lbl_checklistOb=_f("main").s_dropdownlist("purposeCombo");
	//This function is to select workorder object from drop down
		this.sourceComboBox=_f("main").s_combobox("objCombo1");
	this.selectSourceObj=_f("main").s_textinput("textInput");	
	//click on Ok on pop up appear after selecting work object in Propoties tab of SFm designer
	this.btn_popUpOK=_f("main").s_button("OK");	
	this.combo_CTRecord = _f("main").s_combobox("objCombo1[1]");	
	this.childSource_chkBox = _f("main").s_checkbox("Work Detail (Work Order)");		
	this.childCTRecord_chkBox = _f("main").s_checkbox("Work Detail (Work Order)[1]");	
	this.childcheckbox_workorder = _f("main").s_checkbox("Work Detail (Work Order)");
	this.tab_qualifyingcriteria_maps = _f("main").tab("Qualifying Criteria and Field Mappings");
	this.lbl_productserviced = _f("main").s_label("Products Serviced");
	this.tab_advancedOptions = _f("main").tab("Advanced Options");
	this.btn_addtoSFMProcess = _f("main").s_button("Add[3]");
	//Drop Down List in Qualifying Criteria and Field Mappings
	this.dropDownList = _f("main").s_dropdownlist("objCombo");
	this.selectExistingPageLayout=_f("main").s_combobox("searchCombo[3]");
	this.tab_advancedOptions=_f("main").tab("Advanced Options");
	this.btn_linkedprocess = _f("main").tab("Linked Process");
	this.btn_manage_workdetailsproductserviced = _f("main").s_label("Manage Work Details for Products Serviced");
	this.lbl_sorting=_f("main").tab("Sorting");
	this.lbl_partObj=_f("main").s_label("Parts[4]");
	this.lbl_partField=_f("main").s_label("Part");
	this.img_add=_f("main").s_button(">[1]");
	this.lbl_childlineparts = _f("main").s_richtext("Parts");
	this.lbl_childlinelabor = _f("main").s_richtext("Labor");
	this.combo_allowzerolines = _f("main").s_combobox("/ComboBox/").rightOf(_f("main").uiftetextfield("Allow Zero Lines"));
	this.lbl_laborObj=_f("main").s_label("Labor[4]");
	this.lbl_activityTypeField=_f("main").s_label("Activity Type");
	this.lbl_expenseObj=_f("main").s_label("Expense[3]");
	this.lbl_lineQtyField=_f("main").s_label("Line Qty");
	this.lbl_travelObj=_f("main").s_label("Travel[1]");
	this.lbl_statDateField=_f("main").s_label("Start Date and Time");
	this.lbl_endDateField=_f("main").s_label("End Date and Time[1]");	
	this.sel_targetObjFld=_f("main").s_textinput(3);
	this.lbl_clkHeaderInQcPage=_f("main").s_label("Work Order");
	this.saveTheMap=_f("main").s_textinput("Save this map as");
	this.clkNewMap=_f("main").s_button("New[1]");
	this.clkNewMapID=_f("main").s_textinput("Input ID Here[1]");
	this.clkMapSave=_f("main").s_button("Save[1]");
	this.QCFieldMapQuickFind=_f("main").s_textinput("filterInput").rightOf(_f("main").s_label("Quick Find"),10,10);
	this.list_objComboBox = _f("main").s_combobox("objCombo1").inside(_f("main").s_panel("...to create these records"));
	this.txtworkdetailaliasname = _f("main").s_textinput("/aliasName/").near(_f("main").s_checkbox("Work Detail (Work Order)"));
	this.txt_contactOnHeader=_f("main").s_textinput("/.*/").near(_f("main").uiftetextfield("Contact").near(_f("main").s_richtext("Work Order")));
	this.chkbx_allowNew = _f("main").s_checkbox("Allow New");
	this.chkbx_allowDelete = _f("main").s_checkbox("Allow Delete");
	this.txt_autoContactChild=_f("main").s_richtext("AutoContact").near(_f("main").s_richtext("Parts"));
	this.btn_scrollbar=_f("main").s_hscrollbar("horizontalScrollBar");
	this.txt_partOnChild=_f("main").s_textinput("lblData").near(_f("main").s_richtext("Part"));
	
	
	
	this.btn_advanced_options = _f("main").tab("Advanced Options");
	this.chkbox_work_order = _f("main").s_checkbox("Work Order");
	this.selectComboBox = function($elementName,$elementItemName){
	_setSelected(_f("main").s_combobox($elementName), $elementItemName);
	
	
	

		
		};
		
		//Enter the name of checklist type SFM transaction
	this.setSfmName=function($sfmName){
		_setValue(_f("main").s_textinput("pName"), ($sfmName));
	};
		
	this.child_checkBox =function($orderTypeName){
			_f("main").s_checkbox($orderTypeName);
	};
		
	this.source_ctRecord_comboBox = function($comboName){
			_f("main").s_combobox($comboName);	
	};	
	//	_f("main").s_combobox($comboName);
    /**
     * Select a SFM from the SFM list, set $isCustom to select from custom SFM list elements.
     *@param $sfmName
     *@param $isCustom
     */
	
	// Owner : Meghana Rao P
	
	this.clickSFM = function($sfmName , $isCustom) {
		
		if ($isCustom) {
			_selectDomain("/svmx/");
			_wait(3000);
			 _click($bo_pg_sfmTransactionAndDesigner.btn_yourCustomSfmTransactions);
			 
		}
		_setValue($bo_pg_sfmTransactionAndDesigner.txt_yourCustomSfmTransactionsQuickFind, $sfmName); // Owner Meghana 
		_click(_f("main").s_label($sfmName));
		_selectDomain();
	};
	
	// Done

	this.selectSFM = function($sfmName, $isCustom) {
	if ($isCustom) {
		_wait(3000);
	 _click($bo_pg_sfmTransactionAndDesigner.btn_yourCustomSfmTransactions);
	}
	_click(_f("main").s_checkbox(2).leftOf(_f("main").s_label($sfmName), 10, 10));
	_takePageScreenShot();
    };

    /**
     * Add a field in the SFM Designer page
     * @param $fieldName
     * @param $containerName
     */
  this.addField = function($fieldName, $containerName) {
	_click(_f("main").fieldrenderer("[object Object]").near(_f("main").formitemlabel($containerName)));
	_setValue($bo_pg_sfmTransactionAndDesigner.txt_quickFindField, $fieldName);
	_click(_f("main").s_label($fieldName).near($bo_pg_sfmTransactionAndDesigner.btn_addFieldToPage));
	_click($bo_pg_sfmTransactionAndDesigner.btn_addFieldToPage);
    };

    /**
     * Delete a field  from the SFM Designer page
     * @param $fieldName
     */
    //Modified by JJ as this stopped working.
    this.deleteField = function($fieldName) {
    	_click(_f("main").s_button("Remove this field").near(_f("main").uiftetextfield($fieldName)));
    };
    this.deleteChildField = function($fieldName){
    	_click(_f("main").s_button("closeBtn").near(_f("main").s_richtext($fieldName)));
    };
    
    // Added by Harish
    this.chk_override = _f("main").s_checkbox("Override Context");
    this.sel_context = _f("main").s_combobox("/ComboBox/").rightOf(_f("main").formitemlabel("Context"));
    this.sel_matchingField = _f("main").s_combobox("/ComboBox/").rightOf(_f("main").formitemlabel("Matching Field"));
	
	//Added by JJ
    this.page_saved = _f("main").label("Page saved");
    this.btn_proceed_anyways = _f("main").button("Proceed Anyway");
    this.btn_newLineForQc = _f("main").s_button("+");
    this.btn_editExprSave = _f("main").s_button("Save");
    this.label_exprSaved = _f("main").label("Expression saved");
    this.label_sfmTxnSaved = _f("main").label("SFM Transaction saved");
    this.txt_saveExprAs = _f("main").s_textinput("Save this filter as");
    this.btn_editExprSaveAs = _f("main").s_button("Save As"); // This button is in SFM "Qualifying Criteria and Field Mappings" tab
    this.txt_inputIdAs = _f("main").s_textinput("Input ID Here");
    this.btn_addFieldToPage = _f("main").s_button("/Add Field/");
    this.label_pageSaved = _f("main").label("Page saved");
    this.btn_newPageLayout = _f("main").s_button("New[3]");
    this.label_costCategory = _f("main").s_label("Cost Category[1]");
    this.label_account = _f("main").s_label("Account[1]");
    
    

};
