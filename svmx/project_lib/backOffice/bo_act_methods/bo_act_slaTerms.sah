/**
 * Functions for the Accounts Object
 */
var $bo_act_slaTerms = new function bo_act_slaTerms() {

	/**
	 * Create a SLA terms
	 * 
	 * @param $$slaName
	 */
	this.createSlaTerms = function($defaultBusinessHours) {
			var $slaName = $bo_act_common.generateRandomName("sla");
			$bo_act_navigation.navigateToSlaTerms();
			_click($bo_pg_slaTerms.btn_newSlaTerms);
			_setValue($bo_pg_slaTerms.txt_slaTermName, $slaName);
			_setValue($bo_pg_slaTerms.txt_defaultBusinessHours, $defaultBusinessHours);
			_check($bo_pg_slaTerms.chk_active);
			_click($bo_pg_slaTerms.btn_save);
			_assertNotVisible(_div("/Error: Invalid Data/"));
			_logOutput($slaName+ " SLA Term is created");
			return $slaName;
		  _wait(30000, _isVisible(_span($SLAName)));
          return $slaName;
		//return $callBack.returnResult([_isVisible($accountName), "Account not created",$accountName] );
	    // Need to return
	};
	
	//Add Initial Response for existing SLA terms
	this.addInitialResponseToSLA = function($slaName,$ResponseTrackedOn,$orderType,$priority,$clockStartsFrom,$internalGoal,$customerCommitment,$businessHoursFrom) {
		$bo_act_slaTerms.editSLA($slaName);	
		_click($bo_pg_slaTerms.btn_initialResponse);
		_setSelected($bo_pg_slaTerms.sel_responseTrackedOn, $ResponseTrackedOn);
		_wait(10000,_isVisible($bo_pg_slaTerms.btn_AddRecord));
		_click($bo_pg_slaTerms.btn_AddRecord);
		_wait(10000,_isVisible($bo_pg_slaTerms.sel_orderType));
		_setSelected($bo_pg_slaTerms.sel_orderType, $orderType);
		_setSelected($bo_pg_slaTerms.sel_priority, $priority);
		_setSelected($bo_pg_slaTerms.sel_clockStartsFrom, $clockStartsFrom);
		_setValue($bo_pg_slaTerms.sel_internalGoal, $internalGoal);
		_setValue($bo_pg_slaTerms.sel_customerCommitment, $customerCommitment);
		_setSelected($bo_pg_slaTerms.sel_businessHoursFrom, $businessHoursFrom);
		_click($bo_pg_slaTerms.btn_save);
		_assertNotVisible(_div("/Error: Invalid Data/"));
		_logOutput($slaName+ " Initial Response To SLA is Added");
		_wait(30000, _isVisible(_button("New SLA Terms")));
		return $slaName;
	//return $callBack.returnResult([_isVisible($accountName), "Account not created",$accountName] );
	};
	
	//Add Onsite Response for existing SLA terms
	this.addOnsiteResponseToSLA = function($slaName,$ResponseTrackedOn,$orderType,$priority,$clockStartsFrom,$internalGoal,$customerCommitment,$businessHoursFrom) {
		$bo_act_slaTerms.editSLA($slaName);	
		_click($bo_pg_slaTerms.btn_onsiteResponse);
		_setStrictVisibilityCheck(true);
		_setSelected($bo_pg_slaTerms.sel_responseTrackedOn, $ResponseTrackedOn);
		_wait(10000,_isVisible($bo_pg_slaTerms.btn_AddRecord));
		_setStrictVisibilityCheck(true);
		_click($bo_pg_slaTerms.btn_AddRecord);
		_setSelected($bo_pg_slaTerms.sel_orderType, $orderType);
		_setSelected($bo_pg_slaTerms.sel_priority, $priority);
		_setSelected($bo_pg_slaTerms.sel_clockStartsFrom, $clockStartsFrom);
		_setSelected($bo_pg_slaTerms.sel_businessHoursFrom, $businessHoursFrom);
		_setValue($bo_pg_slaTerms.sel_internalGoal, $internalGoal);
		_setValue($bo_pg_slaTerms.sel_customerCommitment, $customerCommitment);
		_setStrictVisibilityCheck(false);
		_click($bo_pg_slaTerms.btn_save);
		_assertNotVisible(_div("/Error: Invalid Data/"));
		_logOutput($slaName+ " Onsite Response To SLA is Added");
		_wait(30000, _isVisible(_button("New SLA Terms")));
		return $slaName;
	//return $callBack.returnResult([_isVisible($accountName), "Account not created",$accountName] );
	};
	
	//Add Restoration for existing SLA terms
	this.addRestorationToSLA = function($slaName,$ResponseTrackedOn,$orderType,$priority,$clockStartsFrom,$internalGoal,$customerCommitment,$businessHoursFrom) {
		$bo_act_slaTerms.editSLA($slaName);	
		_click($bo_pg_slaTerms.btn_restoration);
		_setStrictVisibilityCheck(true);
		_setSelected($bo_pg_slaTerms.sel_responseTrackedOn, $ResponseTrackedOn);
		_wait(10000,_isVisible($bo_pg_slaTerms.btn_AddRecord));
		_setStrictVisibilityCheck(true);
		_click($bo_pg_slaTerms.btn_AddRecord);
		_setSelected($bo_pg_slaTerms.sel_orderType, $orderType);
		_setSelected($bo_pg_slaTerms.sel_priority, $priority);
		_setSelected($bo_pg_slaTerms.sel_clockStartsFrom, $clockStartsFrom);
		_setSelected($bo_pg_slaTerms.sel_businessHoursFrom, $businessHoursFrom);
		_setValue($bo_pg_slaTerms.sel_internalGoal, $internalGoal);
		_setValue($bo_pg_slaTerms.sel_customerCommitment, $customerCommitment);
		_setStrictVisibilityCheck(false);
		_click($bo_pg_slaTerms.btn_save);
		_assertNotVisible(_div("/Error: Invalid Data/"));
		_logOutput($slaName+ " Onsite Response To SLA is Added");
		_wait(30000, _isVisible(_button("New SLA Terms")));
		return $slaName;
	//return $callBack.returnResult([_isVisible($accountName), "Account not created",$accountName] );
	};
	
	//Add Resolution for existing SLA terms
	this.addResolutionToSLA = function($slaName,$ResponseTrackedOn,$orderType,$priority,$clockStartsFrom,$internalGoal,$customerCommitment,$businessHoursFrom) { 
		_selectDomain("/svmx/");
		$bo_act_slaTerms.editSLA($slaName);	// MODIFIED FOR LIGHTNING
		_click($bo_pg_slaTerms.btn_resolution);
		_setStrictVisibilityCheck(true);
		_setSelected($bo_pg_slaTerms.sel_responseTrackedOn, $ResponseTrackedOn);
		_wait(10000,_isVisible($bo_pg_slaTerms.btn_AddRecord));
		_setStrictVisibilityCheck(true);
		_click($bo_pg_slaTerms.btn_AddRecord);
		_setSelected($bo_pg_slaTerms.sel_orderType, $orderType);
		_setSelected($bo_pg_slaTerms.sel_priority, $priority);
		_setSelected($bo_pg_slaTerms.sel_clockStartsFrom, $clockStartsFrom);
		_setSelected($bo_pg_slaTerms.sel_businessHoursFrom, $businessHoursFrom);
		_setValue($bo_pg_slaTerms.sel_internalGoal, $internalGoal);
		_setValue($bo_pg_slaTerms.sel_customerCommitment, $customerCommitment);
		_setStrictVisibilityCheck(false);
		_click($bo_pg_slaTerms.btn_save);
		_assertNotVisible(_div("/Error: Invalid Data/"));
		_logOutput($slaName+ " Onsite Response To SLA is Added");
		_wait(30000, _isVisible(_button("New SLA Terms")));
		return $slaName;
	//return $callBack.returnResult([_isVisible($accountName), "Account not created",$accountName] );
	};

this.editSLA = function($slaName) { // MODIFIED FOR LIGHTNING
	_selectDomain("/svmx/");
	$bo_pg_slaTerms.selectSLA($slaName);
	_click($bo_pg_slaTerms.btn_editSLA);
	_wait(30000, _isVisible(_cell("Initial Response")));
	_selectDomain();
	//return $callBack.returnResult([_isVisible($$warrantyName), "Warranty Name created",$$warrantyName] );
};

this.deleteSLATerm = function($slaName){
	$bo_act_navigation.navigateToSlaTerms();
	$bo_pg_slaTerms.selectSLA($slaName);
	_click($bo_pg_slaTerms.btn_deleteSLA);
};

};