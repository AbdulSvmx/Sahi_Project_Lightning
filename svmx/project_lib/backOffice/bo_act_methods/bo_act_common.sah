
var $bo_act_common = new function bo_act_common() {

this.generateRandomName = function($Prefix){
  var $now = new Date();
    var $day = $now.getDate();
    var $month = $now.getMonth()+1;
    var $year = $now.getFullYear();
    var $hrs = $now.getHours();
	var $min = $now.getMinutes();
	var $sec = $now.getSeconds();
    var $RandomString = $Prefix+$day + $month+ $year+$hrs+$min+$sec; 		
    return $RandomString;
};

this.currentDate= function ($seperator){
    var $now = new Date();
    var $monthday;// = $now.getDate();
    if ($now.getDate() < 10)
        $monthday = "0" + $now.getDate();
    else
        $monthday = $now.getDate();
    var $month = $now.getMonth() + 1;
    if ($month < 10)
      $month = "0" + $month;

    var $year = $now.getFullYear();
    
    var $currentDate = $month+ $seperator + $monthday + $seperator + $year; 
    return $currentDate;
};

 this.getfutureDate = function($futureYear, $seperator){
	var $now = new Date();
    var $monthday;// = $now.getDate();
    if ($now.getDate() < 10)
        $monthday = "0" + $now.getDate();
    else
        $monthday = $now.getDate();
    var $month = $now.getMonth() + 1;
    if ($month < 10)
        $month = "0" + $month;

    var $year = $now.getFullYear();
	$year = $year+$futureYear;
    
     var $currentDate = $month+ $seperator +$monthday  + $seperator+$year; 
    return $currentDate;
};


this.getPastDate = function($pastYear, $seperator){
	var $now = new Date();
    var $monthday;// = $now.getDate();
    if ($now.getDate() < 10)
        $monthday = "0" + $now.getDate();
    else
        $monthday = $now.getDate();
    var $month = $now.getMonth() + 1;
    if ($month < 10)
        $month = "0" + $month;

    var $year = $now.getFullYear();
	$year = $year-$pastYear;
    
     var $currentDate = $month+ $seperator +$monthday  + $seperator+$year; 
    return $currentDate;
};

this.searchfunction = function($searchValue){
_getRecentWindow();
_setStrictVisibilityCheck(true);
_click(_span("/svmx-button/",_near(_div("svmx-column-inner",_in(_div("svmx-panel svmx-fit-item svmx-window-item svmx-panel-default"))))));
_getRecentWindow();
//_click(_textbox("/svmx-picklist/"));
//_click(_listItem("Contains"));
_click(_textbox("/sfm-text/",_near(_span("/svmx-sfmd-search-icon/"))));
_click(_span("/svmx-sfmd-search-icon/"));
_setValue(_textbox("/sfm-text/",_near(_span("/svmx-sfmd-search-icon/"))),$searchValue);
_click(_span("/svmx-sfmd-search-icon/"));
_click(_div($searchValue));
_click(_span("Select"));
_setStrictVisibilityCheck(false);
};


this.currentDateWithoutAppendingZero= function ($seperator){
    var $now = new Date();
    var $monthday = now.getDate();// = $now.getDate();
    var $month = $now.getMonth();
    var $year = $now.getFullYear();
    var $currentDate = $month+ $seperator + $monthday + $seperator + $year; 
    return $currentDate;
};

this.nextMonthWithoutAppendingZero= function ($seperator){
    var $now = new Date();
    var $monthday = now.getDate();// = $now.getDate();
    var $month = $now.getMonth();
    if($month == 12)
    	$month =1;
    else
    	$month = $now.getMonth()+1;
    var $year = $now.getFullYear();
    var $nextMonthDate = $month+ $seperator + $monthday + $seperator + $year; 
    return $nextMonthDate;
};

this.endDateCalculationForIB = function ($startDateExpectedOn_IB, $durationOfCoverage, $seperator){
	var $dateInstalled = new Date($startDateExpectedOn_IB);
	_logOutput($dateInstalled);
	var $year = $dateInstalled.getFullYear();
	_logOutput($year);
	var $year = $year + $durationOfCoverage;
	_logOutput($year);
	var $month = $dateInstalled.getMonth();
	_logOutput($month);
	var $day = $dateInstalled.getDate();
	_logOutput($day);
	var $endDateCalculationForIB =  ($month+1)+$seperator+($day-1)+$seperator+$year;
	_logOutput($endDateCalculationForIB);
	return $endDateCalculationForIB;
	};

this.cleanUpfunctionold = function($value)
	{
		_setValue(_textbox("phSearchInput"),$value);
		_click(_button("phSearchButton"));
		if(_condition(_heading1("Search Results") == null))
			{
			_click(_button("phSearchButton"));
			}
		_wait(3000, _isVisible(_link("searchAll")));
		_click(_link("searchAll"));
		if(_isVisible(_link($value))){
			_click(_link($value));
			_wait(3000, _isVisible(_button("Delete")));
			_click(_button("Delete"));
			_logOutput($value+ " is deleted");

		}else{
			_logException("The value "+$value+"is not found")
		}
		
	};
	
	this.getStartDateWithoutZeros = function($pastYear, $seperator){
		var $now = new Date();
	    var $monthday = $now.getDate();
	    var $month = $now.getMonth() + 1;
	    var $year = $now.getFullYear();
		$year = $year-$pastYear;
	    
		var $StartDate = $month+ $seperator +$monthday  + $seperator+$year; 
	    return $StartDate;
	};
	
	 this.getEndDateWithoutZeros = function($futureYear, $seperator){
			var $now = new Date();
		    var $monthday = $now.getDate();
		    var $month = $now.getMonth() + 1;
		    var $year = $now.getFullYear();
			$year = $year+$futureYear;
		    
		     var $EndDate = $month+ $seperator +$monthday  + $seperator+$year; 
		    return $EndDate;
		};


		this.cleanUpfunction = function($value)
		{
			_click($bo_pg_search.btn_search);
			_wait(5000,_isVisible($bo_pg_search.btn_searchAgain));
			for(var $i=0;$i<=5;$i++){
				_click($bo_pg_search.txt_searchText,$value);
				_setValue($bo_pg_search.txt_searchText,$value);
				_click($bo_pg_search.btn_searchAgain);
				if(_isVisible(_link($value))){
					_click(_link($value));
					_wait(5000, _isVisible($bo_pg_search.btn_delete));
					_click($bo_pg_search.btn_delete);
					_logOutput($value+ " is deleted");
					break;
				}else{
					if($i == 5){
						_logException("The value "+$value+"is not found");
					}
				}
				
			}
			
		};
		
		this.deleteWorkOrder = function($userName,$password,$value,$nameSpace){
			var $delete_Query = "delete [Select Id from " +$nameSpace+"__Service_Order__c where Name = "+$value+"];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
		};

};
