
var $bo_act_common = new function bo_act_common() {

this.generateRandomName = function($Prefix){
	 _wait(1000);
  var $now = new Date();
    var $day = $now.getDate();
    var $month = $now.getMonth()+1;
    var $year = $now.getFullYear();
    var $hrs = $now.getHours();
	var $min = $now.getMinutes();
	var $sec = $now.getSeconds();
    var $RandomString = $Prefix+$day + $month+ $year+$hrs+$min+$sec; 	
    _log("Num Gen = ",$RandomString);
    return $RandomString;
};

this.setDate = function($seperator){
	
	
    var $now = new Date();
    var $monthday;// = $now.getDate();
    if ($now.getDate() < 10)
        $monthday = "0" + $now.getDate();
    else
        $monthday = $now.getDate();
    var $month = $now.getMonth() + 1;
    if ($month < 10)
      $month = "0" + $month;

    var $year = $now.getFullYear();
 
    $monthday = $monthday-1;
    var $currentDate = $month+ $seperator + $monthday + $seperator + $year; 
    return $currentDate;
	
};

this.currentDate= function ($seperator){
    var $now = new Date();
    var $monthday;// = $now.getDate();
    if ($now.getDate() < 10)
        $monthday = "0" + $now.getDate();
    else
        $monthday = $now.getDate();
    var $month = $now.getMonth() + 1;
    if ($month < 10)
      $month = "0" + $month;

    var $year = $now.getFullYear();
    
    var $currentDate = $month+ $seperator + $monthday + $seperator + $year; 
    return $currentDate;
};

 this.getfutureDate = function($futureYear, $seperator,$futureDay){
	var $now = new Date();
    var $monthday;// = $now.getDate();
    if ($now.getDate() < 10)
        //$monthday = "0" + $now.getDate();
    	$monthday = $now.getDate();
    else
        $monthday = $now.getDate();
    var $month = $now.getMonth() + 1;
    if ($month < 10)
        //$month = "0" + $month;

    var $year = $now.getFullYear();
	$year = $year+$futureYear;

	if ($futureDay!=null && $futureDay!="") {
		$monthday=$monthday+$futureDay;
		
		//if adding date make month to next month below logic works
		var $nowAdd=new Date();
		$nowAdd.setDate($monthday);
		var $monthdayAdd=$nowAdd.getDate();
		
		var $monthAdd=$nowAdd.getMonth()+1;
		
		if ($monthAdd>$month) {
			$monthday=$monthdayAdd;
			$month=$monthAdd;
		}
	}
    
     var $currentDate = $month+ $seperator +$monthday  + $seperator+$year; 
     _log("$currentDate: "+$currentDate);
    return $currentDate;
};


this.getPastDate = function($pastYear, $seperator){
	var $now = new Date();
    var $monthday;// = $now.getDate();
    if ($now.getDate() < 10)
        $monthday = "0" + $now.getDate();
    else
        $monthday = $now.getDate();
    var $month = $now.getMonth() + 1;
    if ($month < 10)
        $month = "0" + $month;

    var $year = $now.getFullYear();
	$year = $year-$pastYear;
    
     var $currentDate = $month+ $seperator +$monthday  + $seperator+$year; 
    return $currentDate;
};

this.searchfunction = function($searchValue){
// Modifying for Lightning
_selectDomain("/svmx/");
_setValue(_textbox("/sfm-text/", _near(_label("Search Control"))), $searchValue);
_click(_span("Search"));
_click(_span("/x-grid-checkcolumn/", _near(_div($searchValue))));
_click(_span("Add"));
_selectDomain();
};


this.currentDateWithoutAppendingZero= function ($seperator){
    var $now = new Date();
    var $monthday = now.getDate();// = $now.getDate();
    var $month = $now.getMonth();
    var $year = $now.getFullYear();
    var $currentDate = $month+ $seperator + $monthday + $seperator + $year; 
    return $currentDate;
};

this.nextMonthWithoutAppendingZero= function ($seperator){
    var $now = new Date();
    var $monthday = now.getDate();// = $now.getDate();
    var $month = $now.getMonth();
    if($month == 12)
    	$month =1;
    else
    	$month = $now.getMonth()+1;
    var $year = $now.getFullYear();
    var $nextMonthDate = $month+ $seperator + $monthday + $seperator + $year; 
    return $nextMonthDate;
};

this.endDateCalculationForIB = function ($startDateExpectedOn_IB, $durationOfCoverage, $seperator){
	var $dateInstalled = new Date($startDateExpectedOn_IB);
	_logOutput($dateInstalled);
	var $year = $dateInstalled.getFullYear();
	_logOutput($year);
	var $year = $year + $durationOfCoverage;
	_logOutput($year);
	var $month = $dateInstalled.getMonth();
	_logOutput($month);
	var $day = $dateInstalled.getDate();
	_logOutput($day);
	if($day== 1 && ($month== 1 || 2 || 4 || 6 || 8 || 9 || 11 )){
		var $endDateCalculationForIB =  ($month)+$seperator+("31")+$seperator+$year;
		_logOutput($endDateCalculationForIB);
	}
	else if($day== 1 && ($month== 3 || 5 || 7 || 10 || 12)){
		var $endDateCalculationForIB =  ($month)+$seperator+("30")+$seperator+$year;
		_logOutput($endDateCalculationForIB);
	}else{
	var $endDateCalculationForIB =  ($month+1)+$seperator+($day-1)+$seperator+$year;
	_logOutput($endDateCalculationForIB);
	}
	return $endDateCalculationForIB;
	};

this.cleanUpfunctionold = function($value) // Modified for Lightning
	{
		_setStrictVisibilityCheck(true);
		_setValue(_textbox("Search Salesforce"),$value);
		_wait(10000);
		_click(_mark($value));
		_wait(20000);
		_click(_link("Show more actions"));
		_click(_link("Delete"));
		_wait(10000, _isVisible(_div("CancelDelete")));
		_click(_span("Delete"));
		_wait(10000);
		_setStrictVisibilityCheck(false);
		_logOutput($value+ " is deleted");
		_wait(10000);
		
	};
	
	this.getStartDateWithoutZeros = function($pastYear, $seperator){
		var $now = new Date();
	    var $monthday = $now.getDate();
	    var $month = $now.getMonth() + 1;
	    var $year = $now.getFullYear();
		$year = $year-$pastYear;
	    
		var $StartDate = $month+ $seperator +$monthday  + $seperator+$year; 
	    return $StartDate;
	};
	
	 this.getEndDateWithoutZeros = function($futureYear, $seperator){
			var $now = new Date();
		    var $monthday = $now.getDate();
		    var $month = $now.getMonth() + 1;
		    var $year = $now.getFullYear();
			$year = $year+$futureYear;
		    
		     var $EndDate = $month+ $seperator +$monthday  + $seperator+$year; 
		    return $EndDate;
		};


		this.cleanUpfunction = function($value)
		{
			_call(top.location.reload(true));
			_click(_link("Home")); // Changes added by Meghana
			_doubleClick($bo_pg_search.btn_search);
			_wait(5000,_isVisible($bo_pg_search.btn_searchAgain));
			for(var $i=0;$i<=5;$i++){
					_wait(5000,_isVisible($bo_pg_search.txt_searchText));
					_setValue($bo_pg_search.txt_searchText,$value);
					_click($bo_pg_search.btn_searchAgain);
				if(_isVisible(_link($value))){
					_click(_link($value));
					_wait(5000, _isVisible($bo_pg_search.btn_delete));
					_click($bo_pg_search.btn_delete);
					_logOutput($value+ " is deleted");
					break;
				}else{
					if($i == 5){
						_logException("The value "+$value+"is not found");
					}
				}
				
			}
			
		};
		
		this.deleteWorkOrder = function($userName,$password,$namespace,$value){
			var $delete_Query = "delete [Select Id from "+$namespace+"__Service_Order__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
		};
		
		// Changes added by Meghana
		
		this.deleteCase = function($userName,$password,$value){
			var $delete_Query = "delete [Select Id from Case where CaseNumber ='"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");	
			
		};
		
		
		this.deleteProduct = function($userName,$password,$value){
			var $delete_Query = "delete [Select Id from Product2 where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
			
			
		};
		
	
		
		
		this.deleteAccount = function($userName,$password,$value){
			var $delete_Query = "delete [Select Id from Account where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
			
		};
		
		this.deleteContact = function($userName,$password,$value){
			var $delete_Query = "delete [Select Id from Contact where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
			
			
		};
		
		this.deleteIB = function($userName,$password,$namespace,$value){
			var $delete_Query = "delete [Select Id from "+$namespace+"__Installed_Product__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
			
		};

		// Delete SLA Terms
		
		this.deleteSLA = function($userName,$password,$namespace,$value){
			var $delete_Query = "delete [Select Id from "+$namespace+"__Service_Level__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
			
		};
		
		
		// Delete Location
		this.deleteLocation = function($userName,$password,$namespace,$value){
			var $delete_Query = "delete [Select Id from "+$namespace+"__Site__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
			
		};
		
		
		
		this.deleteActivityMaster = function($userName,$password,$nameSpace,$value){
			var $delete_Query = "delete[Select Id from " +$nameSpace+"__Activity_Master__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
		};
		
		this.deleteSCON = function($userName,$password,$nameSpace,$value){
			var $delete_Query = "delete[Select Id from " +$nameSpace+"__Service_Contract__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
		};
		
		this.deleteWarranty = function($userName,$password,$nameSpace,$value){
			var $delete_Query = "delete[Select Id from " +$nameSpace+"__Service_Template__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
		};
		
		
		this.deletePMPlantemplate = function($userName,$password,$nameSpace,$value){
			var $delete_Query = "delete[Select Id from " +$nameSpace+"__PM_Plan_Template__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
		};
		
		this.deletePMPlan = function($userName,$password,$nameSpace,$value){
			var $delete_Query = "delete[Select Id from " +$nameSpace+"__PM_Plan__c where Name = '"+$value+"'];";
			var $delete_data = $op_act_sForceApiCall.sForceQuery($userName, $password, $delete_Query , "create");
		};
};
