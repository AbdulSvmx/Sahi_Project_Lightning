/**
* Function to perform actions on list view
*/


var $sfmrdz_act_trnListView=new function sfmrdz_act_trnListView(){
	
	/**
	 * Delete transaction
	 * Parameter: 
	 * 			$trnType: is transaction standard or custom 
	 * 			$trnName: Name of transaction
	 */			
	this.deleteCustomTrn=function($trnName){
		
		// Search and Delete transaction
		$sfmrdz_act_common.clickActionMenu($trnName);
		_click($sfmrdz_pg_common.link_delete);
		_wait(10000,_isVisible($sfmrdz_pg_trnListView.heading_confirmationAlert));
		_assertExists($sfmrdz_pg_trnListView.heading_confirmationAlert);
		_click($sfmrdz_pg_common.btn_msgConfirm);
		_wait(10000,_isVisible($sfmrdz_pg_trnListView.btn_closeTrnDeleteSucessMsg));
		
		//Assert Deletion
		_assertExists($sfmrdz_pg_trnListView.btn_trnDeleteSucessMsg);
		_click($sfmrdz_pg_trnListView.btn_closeTrnDeleteSucessMsg);
		$sfmrdz_act_common.clickActionMenu($trnName);
		_AssertExists($sfmrdz_pg_trnListView.btn_msgNoResult);
	};
	
	
	/**
	 * Search and clone transaction
	 * Note: Yet to complete
	 */
	this.cloneTrn=function($trnName,$newTrnName){
		$sfmrdz_act_common.clickActionMenu($trnName);
		_click($sfmrdz_pg_common.link_clone);
		_wait(5000,_isVisible($sfmrdz_pg_trnListView.heading_cloneTrn));
		
	};
	
	/**
	 * Content search on transaction list view
	 */
	this.contentSearch=function($search){
		$sfmrdz_act_common.searchObj($search);
		_wait(5000);
		//var $trnLinks=_collect("_div","/rt-td DataTableCell/",_under(_parentNode(_div("TRANSACTION NAME"),"DIV",1)));
		//var $trnLinks=_collect("_link","/.*/",_under(_div("TRANSACTION NAME")));
		var $trnLinks =_collect("_div","/DataTableCell--overflow/",_under(_parentNode($sfmrdz_pg_trnListView.btn_heading_trnCol,"DIV",1)));
		_log("No. of rows: "+$trnLinks.length);
			if ($trnLinks.length==0) {
				_log("$trnLinks collection else loop");
				$trnLinks = _collect("_link","/Text slds-text-body.*/",_under(_parentNode($sfmrdz_pg_trnListView.btn_heading_trnCol,"DIV",1)));
				_log("No. of rows: "+$trnLinks.length);
			}
		var $trnNames=new Array($trnLinks.length);
		var $retVal=true;
		var $rowNotContaingText=null;
		for (var $i=0; $i<$trnLinks.length; $i++) {
			$trnNames[$i]=_getText($trnLinks[$i]);

			if ($trnNames[$i].indexOf($search)==-1) {
				var $trnLinkRow=_parentNode(_link($trnNames[$i]),"DIV",2);
				var $sourceObjText=_getText(_div("/rt-td.*/[2]",_in($trnLinkRow)));
				var $TDTOText=_getText(_div("/rt-td.*/[3]",_in($trnLinkRow)));
				var $tagText=_getText(_div("/rt-td.*/[5]",_in($trnLinkRow)));
				if ($sourceObjText.indexOf($search)==-1 && $TDTOText.indexOf($search)==-1 && $tagText.indexOf($search)==-1) {
					$retVal=false;
					$rowNotContaingText=$trnNames[$i];
					break;
				}
			}
		}
		return [$retVal,$rowNotContaingText];
		//_assertTrue($retVal,$search+" text is not available in "+$rowNotContaingText);
		
	};
	
};