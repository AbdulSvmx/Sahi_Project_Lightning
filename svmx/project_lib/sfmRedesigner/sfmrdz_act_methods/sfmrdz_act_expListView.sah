/**
 * 
 */

var $sfmrdz_act_expListView = new function sfmrdz_act_expListView(){
	
	/**
	 * Delete transaction
	 * Parameter: 
	 * 			$expType: is transaction standard or custom 
	 * 			$expName: Name of Expression
	 */			
	this.deleteCustomExp=function($expName){
		
		// Search and Delete transaction
		$sfmrdz_act_common.clickActionMenu($expName);
		_click($sfmrdz_pg_common.link_delete);
		_wait(10000,_isVisible($sfmrdz_pg_expListView.heading_confirmationAlert));
		_assertExists($sfmrdz_pg_expListView.heading_confirmationAlert);
		_click($sfmrdz_pg_common.btn_msgConfirm);
		_wait(10000,_isVisible($sfmrdz_pg_expListView.btn_closeExpDeleteSucessMsg));
		
		//Assert Deletion
		_assertExists($sfmrdz_pg_expListView.btn_expDeleteSucessMsg);
		_click($sfmrdz_pg_expListView.btn_closeExpDeleteSucessMsg);
		$sfmrdz_act_common.clickActionMenu($expName);
		_AssertExists($sfmrdz_pg_expListView.btn_msgNoResult);
	};
	
	
	/**
	 * Search and clone transaction
	 * Note: Yet to complete
	 */
	this.cloneExp=function($expName,$newexpName){
		$sfmrdz_act_common.clickActionMenu($expName);
		_click($sfmrdz_pg_common.link_clone);
		_wait(5000,_isVisible($sfmrdz_pg_expListView.heading_cloneExp));
		
	};
	
	/**
	 * Content search on transaction list view
	 */
	this.contentSearch=function($search){
		$sfmrdz_act_common.searchObj($search);
		_wait(5000);
		
		var $expLinks =_collect("_div","/DataTableCell--overflow/",_under(_parentNode($sfmrdz_pg_expListView.btn_heading_expressionCol,"DIV",1)));
		_log("No. of rows: "+$expLinks.length);
			if ($expLinks.length==0) {
				_log("$expLinks collection else loop");
				$expLinks = _collect("_link","/Text slds-text-body.*/",_under(_parentNode($sfmrdz_pg_expListView.btn_heading_expressionCol,"DIV",1)));
				_log("No. of rows: "+$expLinks.length);
			}
		var $expNames=new Array($expLinks.length);
		var $retVal=true;
		var $rowNotContaingText=null;
		for (var $i=0; $i<$expLinks.length; $i++) {
			$expNames[$i]=_getText($expLinks[$i]);

			if ($expNames[$i].indexOf($search)==-1) {
				var $expLinkRow=_parentNode(_link($expNames[$i]),"DIV",2);
				var $objText=_getText(_div("/rt-td.*/[2]",_in($expLinkRow)));
				//var $TDTOText=_getText(_div("/rt-td.*/[3]",_in($expLinkRow)));
				//var $tagText=_getText(_div("/rt-td.*/[5]",_in($expLinkRow)));
				if ($objText.indexOf($search)==-1) {
					$retVal=false;
					$rowNotContaingText=$expNames[$i];
					break;
				}
			}
		}
		return [$retVal,$rowNotContaingText];
		//_assertTrue($retVal,$search+" text is not available in "+$rowNotContaingText);
		
	};
	
	
	
};