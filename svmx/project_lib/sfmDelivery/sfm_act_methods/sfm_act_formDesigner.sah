var $sfm_act_formDesigner = new function sfm_act_formDesigner() {
	
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	To Edit checklist section 
	 * Parameter	:	$sectionName=section name
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.editSection= function($sectionName){
		_click($sfm_pg_formDesigner.btn_editSection.near(_f("main").s_richeditabletext($sectionName)));
		_wait(5000,_isVisible($sfm_pg_formDesigner.tab_entryCriteria));
	};
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	To Create new Section 
	 * Parameter	:	None
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.createNewSection=function(){
		_click($sfm_pg_formDesigner.btn_addSection);
		_wait(5000);
	};
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	To Edit checklist section details
	 * Parameter	:	$name=section name
	 * 					$description=Section description
	 * 					$url=help URL
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.editSectionInformation=function($name,$description,$url){
		_setValue($sfm_pg_formDesigner.txt_sectionName,$name);
		_setValue($sfm_pg_formDesigner.txt_sectionDescription,$description);
		_setValue($sfm_pg_formDesigner.txt_helpURL,$url);
	};
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	To Create Entry criteria for checklist section
	 * Parameter	:	$existingEntryCriteria=existing entry criteria name
	 * 					$criteriaDetails=details of entry criteria
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.createEntryCriteria=function($existingEntryCriteria,$criteriaDetails){
		_click($sfm_pg_formDesigner.tab_entryCriteria);
		this.setEntryCriteria($existingEntryCriteria, $criteriaDetails);
		_click($sfm_pg_formDesigner.btn_applyRemove);
		_click($sfm_pg_formDesigner.btn_applySectionWindow);
		_wait(10000,_isVisible($sfm_pg_formDesigner.label_saveEditSectionMsg));
		_click($sfm_pg_formDesigner.btn_entryCriteriaApplyButton);
	};
	
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	To set Entry criteria for checklist section
	 * Parameter	:	$existingEntryCriteria=existing entry criteria name
	 * 					$criteriaDetails=details of entry criteria
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.setEntryCriteria=function($existingEntryCriteria,$criteriaDetails){
		var $comboField=$criteriaDetails[0];
		var $comboConditions=$criteriaDetails[1]; 
		var $toggleButton=$criteriaDetails[2];
		var $comboInput=$criteriaDetails[3];
		var $advExpr=$criteriaDetails[4];
		var $criteriaName=$criteriaDetails[5];
		
	//check if Entry criteria is available already
	if ($existingEntryCriteria!=="" && $existingEntryCriteria!==null) {
		_setSelected($sfm_pg_formDesigner.sel_searchEntryCriteria,$existingEntryCriteria);
	}else{
		_click($sfm_pg_formDesigner.btn_newEntryCriteriaFilter);
		_wait(5000,_isVisible($sfm_pg_screenDesigner.btn_addRow));
		if ($comboField.length==1) {
			_click($sfm_pg_screenDesigner.btn_deleteRow.near(_f("main").s_label("2")));
		}else if ($comboField.length>2) {
			for (var $i = 0; $i < $comboField.length-2; $i++) {
				_log("Add row: "+$i);
				_click($sfm_pg_screenDesigner.btn_addRow);
				}
			}
	
		var $ele=null;
		var $eleType=null;
		var $index=null;
		var $temp=null;
		var $rowNumber=null;
		for (var $i = 1; $i <= $comboField.length; $i++) {
			_log("$i value: "+$i);
			$temp=$i;
			$index=$temp-1;
			_log("index: "+$index);
			$rowNumber=_f("main").s_label($i.toString()).near($sfm_pg_formDesigner.tab_entryCriteria);
			_setSelected($sfm_pg_screenDesigner.sel_comboField.near($rowNumber),$comboField[$index]);
			_setSelected($sfm_pg_screenDesigner.sel_comboConditions.near($rowNumber), $comboConditions[$index]);
			if ($comboConditions[$index]!=="Is Null"&&$comboConditions[$index]!=="Is Not Null") {
				if ($toggleButton[$index]!=="") {
					_click($sfm_pg_screenDesigner.btn_toggleChoose.near($rowNumber));
					_wait(3000);
					_setSelected($sfm_pg_screenDesigner.btn_inputCombobox.near($rowNumber),$comboInput[$index]);
				}else{
					$ele=$sfm_pg_screenDesigner.sel_comboField.near($rowNumber);
					$eleType=_exists($sfm_pg_screenDesigner.btn_toggleChoose.rightOf($ele));
					if ($eleType==true) {
						_setValue($sfm_pg_screenDesigner.txt_input.near($rowNumber),$comboInput[$index]);
					}else{
						_setSelected($sfm_pg_screenDesigner.btn_inputCombobox.near($rowNumber),$comboInput[$index]);
					}	
				}
			}
		}
		_setValue($sfm_pg_screenDesigner.txt_advExpr,$advExpr);
		_setValue($sfm_pg_formDesigner.txt_saveAsTextField,$criteriaName);
		_setValue($sfm_pg_formDesigner.txt_saveAsIDTextField,$criteriaName);
		_click($sfm_pg_formDesigner.btn_saveEntryCriteria);
		_wait(10000,_isVisible($sfm_pg_formDesigner.label_saveEntryCriteriaMsg));
		}
	};
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	To remove question from specified section
	 * Parameter	:	$question=Question text
	 * 					$sectionName=Question name
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.removeQuestionFromSection=function($question,$sectionName){
		_click($sfm_pg_formDesigner.btn_removeQuestion.near(_f("main").s_label($question).near(_f("main").s_richeditabletext($sectionName))));
		_wait(10000);
		_assertNotExists(_f("main").s_label($question).near(_f("main").s_richeditabletext($sectionName)));
	};
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	To Add question to specified section
	 * Parameter	:	$sectionName=Question name
	 * 					$question=Question text
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.addQuestionToSection=function($sectionName,$question){
		_click(_f("main").s_richeditabletext($sectionName));
		_setValue($sfm_pg_formDesigner.txt_searchQuestion, "");
		_setValue($sfm_pg_formDesigner.txt_searchQuestion, $question);
		//_mouseOver(_f("main").s_label($question+"[1]"));
		_mouseOver(_f("main").questionlisttreeitemrendererm($question));
		_click($sfm_pg_formDesigner.btn_addQuestion.near(_f("main").s_label($question)));
	};
	
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	click on exit tab
	 * Parameter	:	$sectionName=Question name
	 * 					$question=Question text
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.addExistCriteria=function(){
		_click($sfm_pg_formDesigner.tab_exitCriteria);
		_wait(2000);
	};
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	Add question to exit criteria tab
	 * Parameter	:	$questionNames=Array of question Names
	 * 					$questionType=Question type - Date, Date/Time etc.
	 * 					$criteriaDetails=Queation all criteria deatils;
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.addQuesToExistCriteriaTab=function($questionNames,$questionType,$criteriaDetailList){
		var $questionId;
		var $criteriaDetails;
		
		for (var $i = 0; $i < $questionNames.length; $i++) {
			if ($i==0) {
				$questionId=_f("main").s_label("Question");
			}else {
				_click($sfm_pg_formDesigner.link_addQuestion);
				_wait(2000);
				$questionId=_f("main").s_label("Question["+$i.toString()+"]");
			}
			_setSelected($sfm_pg_formDesigner.sel_questionSelect.near($questionId),$questionNames[$i]);
			if ($questionType[$i]=="Date" || $questionType[$i]=="Date/Time") {
				$criteriaDetails=$criteriaDetailList[$i];
				var $comboField=$criteriaDetails[0];
				var $operandType=$criteriaDetails[1];
				var $answer=$criteriaDetails[2];
				var $skipTo=$criteriaDetails[3];
				this.setExitCriteriaOnDateQuestion($questionId, $comboField, $operandType, $answer, $skipTo);
			}else if ($questionType[$i]=="Number") {
				$criteriaDetails=$criteriaDetailList[$i];
				var $comboField=$criteriaDetails[0];
				var $operandType=$criteriaDetails[1];
				var $answer=$criteriaDetails[2];
				var $skipTo=$criteriaDetails[3];
				this.setExitCriteriaOnDateQuestion($questionId, $comboField, $operandType, $answer, $skipTo);
			}
			
		}
		_wait(3000);
		_click($sfm_pg_formDesigner.btn_applyRemove);
		_wait(2000);
	};
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	Add question to exit criteria tab
	 * Parameter	:	$questionNames=Array of question Names
	 * 					$questionType=Question type - Date, Date/Time etc.
	 * 					$criteriaDetails=Queation all criteria deatils;
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.setExitCriteriaOnDateQuestion=function($questionId, $comboField, $operandType, $answer, $skipTo){
		_log("$comboField.length: "+$comboField.length);
		if ($comboField.length>1) {
			for (var $i = 0; $i < $comboField.length-1; $i++) {
				_log("Add row: "+$i);
				_click($sfm_pg_formDesigner.link_addAnswer.near($questionId));
			}
		}
			var $index=null;
			var $temp=null;
			var $rowNo=null;
			for (var $i = 1; $i <= $comboField.length; $i++) {
				_log("$i value: "+$i);
				$temp=$i;
				$index=$temp-1;
				_log("index: "+$index);
				$rowNo=_f("main").s_label($i.toString()).near($sfm_pg_formDesigner.label_evaluation.near($questionId));
				_log($comboField[$index]);
				_setSelected($sfm_pg_formDesigner.sel_comboFiled.near($rowNo),$comboField[$index]);
				_log($operandType[$index]);
				_setSelected($sfm_pg_formDesigner.sel_operandType.near($rowNo),$operandType[$index]);
				if ($operandType[$index]=="Value") {
						_setValue(_f("main").s_richeditabletext(0).near($rowNo), $answer[$index]);
					}else{
						_setSelected($sfm_pg_formDesigner.sel_ansPicklist.near($rowNo),$answer[$index]);
				}
				_setSelected($sfm_pg_formDesigner.sel_skipToSection.near($rowNo), $skipTo[$index]);
			}
	};
	
	
	/**
	 * Author		:	Anand Kakhandaki
	 * Function		: 	Add question to exit criteria tab
	 * Parameter	:	$questionNames=Array of question Names
	 * 					$questionType=Question type - Date, Date/Time etc.
	 * 					$criteriaDetails=Queation all criteria deatils;
	 * Example		:	Refer _ _ _ _ file for function usage
	 */
	this.setExitCriteriaOnNumberQuestion=function($questionId, $comboField, $operandType, $answer, $skipTo){
		//_log("$comboField.length: "+$comboField.length);
		if ($comboField.length>1) {
			for (var $i = 0; $i < $comboField.length-1; $i++) {
				_log("Add row: "+$i);
				_click($sfm_pg_formDesigner.link_addAnswer.near($questionId));
			}
		}
			var $index=null;
			var $temp=null;
			var $rowNo=null;
			for (var $i = 1; $i <= $comboField.length; $i++) {
				_log("$i value: "+$i);
				$temp=$i;
				$index=$temp-1;
				_log("index: "+$index);
				$rowNo=_f("main").s_label($i.toString()).near($sfm_pg_formDesigner.label_evaluation.near($questionId));
				_log($comboField[$index]);
				_setSelected($sfm_pg_formDesigner.sel_comboFiled.near($rowNo),$comboField[$index]);
				_log($operandType[$index]);
				_setSelected($sfm_pg_formDesigner.sel_operandType.near($rowNo),$operandType[$index]);
				_setValue($sfm_pg_formDesigner.txt_ansTextValue.near($rowNo),$answer[$index]);
				_setSelected($sfm_pg_formDesigner.sel_skipToSection.near($rowNo), $skipTo[$index]);
			}
	};
	
	this.editQuestionInSection=function($sectionName, $question){
		_click($sfm_pg_formDesigner.btn_editQuestion.near(_f("main").s_label($question).near(_f("main").s_richeditabletext($sectionName))));
		_wait(3000,_isVisible($sfm_pg_formDesigner.tab_dataValidation));
	};
	
	
	this.dataValidationOnCheckListQuestion=function($dvrName,$dvrID,$dvrExpressionDetails){
		_click($sfm_pg_formDesigner.tab_dataValidation);
		_setValue($sfm_pg_formDesigner.txt_dvrName,$dvrName);
		_setValue($sfm_pg_formDesigner.txt_dvrID,$dvrID);
		
		var $comboField;
		var $operandType;
		var $answer;
		var $advExpr;
		var $errorMsg;
		//add Expression to DVR
		$comboField=$dvrExpressionDetails[0];
		$operandType=$dvrExpressionDetails[1];
		$answer=$dvrExpressionDetails[2];
		$advExpr=$dvrExpressionDetails[3];
		$msfType=$dvrExpressionDetails[4];
		$errorMsg=$dvrExpressionDetails[5];
		this.addDVRExpressions($comboField, $operandType, $answer, $advExpr, $msfType, $errorMsg);
		
	};
	
	this.addDVRExpressions=function($comboField, $operandType, $answer, $advExpr, $msfType, $errorMsg){
		//_log("$comboField.length: "+$comboField.length);
		if ($comboField.length>1) {
			for (var $i = 0; $i < $comboField.length-1; $i++) {
				_log("Add row: "+$i);
				_click($sfm_pg_formDesigner.btn_dvrAddRow.near($sfm_pg_formDesigner.label_dvrExpr));
			}
		}
			var $index=null;
			var $temp=null;
			var $rowNo=null;
			for (var $i = 1; $i <= $comboField.length; $i++) {
				_log("$i value: "+$i);
				$temp=$i;
				$index=$temp-1;
				_log("index: "+$index);
				$rowNo=_f("main").s_label($i.toString()).near($sfm_pg_formDesigner.label_dvrExpr);
				//_log($comboField[$index]);
				_setSelected($sfm_pg_formDesigner.sel_dvrComboField.near($rowNo),$comboField[$index]);
				//_log($operandType[$index]);
				_setSelected($sfm_pg_formDesigner.sel_operandType.near($rowNo),$operandType[$index]);
				if ($operandType[$index]=="Value") {
					_log("Inside Value");
					_setValue($sfm_pg_formDesigner.txt_dvrAnsValue.near($rowNo),$answer[$index]);
				}else {
					_setSelected($sfm_pg_formDesigner.sel_ansPicklist.near($rowNo),$answer[$index]);
				}
			}
			_setValue($sfm_pg_formDesigner.txt_dvrAdvExpr,$advExpr);
			_setSelected($sfm_pg_formDesigner.sel_dvrMsgType,$msfType);
			_setValue($sfm_pg_formDesigner.txt_dvrErrorMsg,$errorMsg);
	};
};