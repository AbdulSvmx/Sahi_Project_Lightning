//_includeOnce("../../../references/references.js");



//Tests are to be written here
//==============

var $RS_5260 = _testcase("$RS_5260","Create a PM Plan from Service Contract with coverage type as Account");
$RS_5260.start();
_setSpeed(100);
//$bo_act_login.login($g_url, $g_un, $g_pwd);


//Pre - Condition 
//var $accName = $bo_act_accounts.createAccount();
//var $proName = $bo_act_products.createProduct("pro12", "--None--");

//var $installedProduct = $bo_act_installedProduct.createInstalledProduct("pro1482017165455","Acc1582017161256","");
//var $slaterm = $bo_act_slaTerms.createSlaTerms("Default");
var $sconUrl = $bo_act_serviceMaintenanceContracts.createServiceMaintenanceContract("Acc1582017161256", "sla1582017165046");
$bo_act_serviceMaintenanceContracts.AddCoveredProductToSCON($sconUrl, "IB_1582017163412");

//Test Steps
var $PMPTempName = $bo_act_PMPlanTemplate.createTimeBasedPMPlanTemplate($proName, "Account (Visit Only)","");
$bo_act_PMPlan.createATimeBasedPMPlan($sconUrl, $PMPTempName,$bo_act_PMPlan.$PMPlanSource_SCON);

//Validations
_assertExists(_tableHeader("No records to display"),_under(_heading3("Preventive Maintenance Coverages")));

var $startDate = _getText(_div(0,_rightOf(_cell("Start Date"))));
_click(_link(0,_under(_tableHeader("Record Number",_under(_heading3("PM Schedule"))))));

var $lastRunDate = _getText(_div(0,_rightOf(_cell("Last Run Date"))));
var $scheduleOnActual = _getText(_div(0,_rightOf(_cell("Scheduled On"))));
_assertEqual($startDate,$lastRunDate, "Last Run Date is not equal to start date");

var $lastRunDate = str.search("/");
var $slice =str.slice(0,1);
slice++;
var $scheduledOnExpected = str.replace(str[pos-1],slice);
_assertEqual($scheduledOnExpected,$scheduleOnActual,"Scheduled On Date is not next month");





$RS_5260.end();
//Test
//}



