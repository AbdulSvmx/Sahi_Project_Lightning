
//author - Noor Salma Sharieff

var $RS_9801 = _testcase("$RS_9801","SFW - Wizard step - background mode of execution.");
$RS_9801.start();
_setSpeed(100);

//Pre - Condition 
$bo_act_login.login($g_url, $bac_unBase, $bac_pwdBase);


var $accountName = $bo_act_accounts.createAccount();
var $contactName = $bo_act_contacts.createContact($accountName);
var $caseNumber = $bo_act_Cases.createCase("New", "High", "Email");
var $productName = $bo_act_products.createProduct();
var $IBName = $bo_act_installedProduct.createInstalledProduct($productName, $accountName, $contactName);
var $WONumber = $bo_act_workOrders.createWorkOrder($caseNumber, $accountName, $contactName, $IBName, "Open", "High", "Field Service");

var $PMPTemplate = $bo_act_PMPlanTemplate.createUsageBasedConditionPMPTemplateNoSave("pro13102017153943");
$bo_act_PMPlanTemplate.updateUsageConditionRulesGridWithAdjFields("Months", "Every", 1, $bo_act_common.currentDate("-"), $bo_act_common.getfutureDate(1,"-"),"Fixed", 1,100, 10,"Days");
$bo_act_PMPlanTemplate.saveConditionBasedPM();

var $sconName = $bo_act_serviceMaintenanceContracts.createServiceMaintenanceContract($accName, $slaterm,1,0);
$bo_act_serviceMaintenanceContracts.AddCoveredProductToSCON($sconName, $IBName);
var $PMPlan = $bo_act_PMPlan.createUsageOrFrequencyBasedPMPlan($PMPTemplate);
var $PMProcessName = $bo_act_PMProcess.createPMProcess("Condition Based Preventive Maintenance", 0, $PMPlan);

var $pmSchedule = _getText(_tableHeader(0,_near(_heading3("PM Schedule"))));
_assertNotEqual("No records to display",$pmSchedule,"PM Schedules are not generated");

$bo_act_login.loginToWorkBench("Sandbox", $bac_unBase, $bac_pwdBase);
var $script = "SVMXDEV.PREV_Conditional_Engine_Batch batchable = new SVMXDEV.PREV_Conditional_Engine_Batch();String processId = '"+$PMProcessName+"';SVMXDEV__ServiceMax_Processes__c condtionprocess = [select id from SVMXDEV__ServiceMax_Processes__c where SVMXDEV__ProcessID__c =: processId limit 1];batchable.setProcessIds = new Set<String>{condtionprocess.Id};Database.executeBatch(batchable, 1);";
$bo_act_login.runApexScriptinWB($script);

$bo_act_navigation.navigateToPreventiveMaintenancePlans();
_click(_link($PMPlan));
var $WONumber = _getText($bo_pg_PMPlan.link_firstLinkInWorkOrders);
_click($bo_pg_PMPlan.link_firstLinkInPMSchedule);
var $actualPMScheduleStatus = _getText(_div(0,_rightOf(_cell("Status[2]"))));
_assertEqual($actualPMScheduleStatus,"Work Order Created","Status is not equal to Work Order Created");

$bo_act_navigation.navigateToWorkOrdersTab();
_click(_link($WONumber));
$bo_act_workOrders.editWorkOrder($WONumber);
$bo_act_workOrders.clickLinktoUpdateTextfields($bo_pg_workOrders.txt_acknowledgedByTechnicianDateTime);
$bo_act_workOrders.saveWorkOrder();

$bo_act_navigation.navigateToPreventiveMaintenancePlans();
_click(_link($PMPlan));
_click($bo_pg_PMPlan.link_firstLinkInPMSchedule);
var $actualPMScheduleStatus = _getText(_div(0,_rightOf(_cell("Status[2]"))));
_assertEqual($actualPMScheduleStatus,"Work Order Created","Status is not equal to Work Order Created");


//Clean up function

var $datacreated = [$accName,$proName,$IBName,$contactName,$WONumber,$slaterm,$PMPTemplate,$sconName,$PMPlan,$PMProcessName];
for (var i = 0; i < $datacreated.length; i++) {
	$bo_act_common.cleanUpfunction($datacreated[i]);
}

$RS_9801.end();



