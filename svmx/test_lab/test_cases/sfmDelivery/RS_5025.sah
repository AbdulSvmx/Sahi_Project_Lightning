//_includeOnce("../../../references/references.js");

//author - Mamata Rout

var $RS_5025 = _testcase("RS_5025", "Verify Field Map for existing records - Header");
$RS_5025.start();
//_setSpeed($g_stepSpeed);

var $sfmName=$bo_act_common.generateRandomName("5025SFM");
//change  the name of $sfmTemplateSaveAsName before execution.
var $sfmTemplateSaveAsName=$bo_act_common.generateRandomName("5025Temp");
var $mapName=$bo_act_common.generateRandomName("5025Map");
var $objName="Work Order";
var $wizardname=$bo_act_common.generateRandomName("5025Wizard");
var $wizardID=$wizardname;

var $executionMode="Interactive";
var $fieldActnType="SFM";
var $actnName=$sfmName;
var $wizardButtonName=$sfmName;
	


//*************Login to Servicemax App***********
//$bo_act_login.login($g_url, $bac_unBase, $bac_pwdBase);
$bo_act_login.login($g_url,$bac_un,$bac_pwd);
$sfm_act_lightningConfig.switchToLightning();

//*****Navgate to SFm Designer and create a new SFM of type source to Target All ********
			$bo_act_navigation.navigateToSfmTransactionDesigner();
			$bo_act_SFM.createNewSFM($sfmName);
			$bo_act_SFM.enterSourceDetail($objName);
			$bo_act_SFM.enterTargetDetail($objName);
//**********IN QC creating header field map of all field data type**************
			_click($bo_pg_sfmTransactionAndDesigner.btn_qualifyingCriteriaAndFieldMapping);

			$bo_act_SFM.qualifyingCriteriaHeaderFieldMap($mapName);


//********** Create a new template and add field Account to its header and save the template and SFM process************
			_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
			_wait(6000,_isVisible(_f("main").tab("Screen Designer")));
			_click($bo_pg_manageWOLineUsageForSorting.btn_screenDesignerNew);
			$bo_act_SFM.addFieldToHeaderOfScreenDesigner("Account");
			_click(_f("main").s_richtext("Parts"));
			_click(_f("main").s_checkbox("Allow New"));
			_click(_f("main").s_checkbox("Allow Delete"));
			_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmSavePageLayoutAs, $sfmTemplateSaveAsName);
			_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmSavePageLayoutAsId, $sfmTemplateSaveAsName);
			
			_click($bo_pg_sfmTransactionAndDesigner.btn_pageLayoutSave);
			_wait(5000);
			_click($bo_pg_sfmTransactionAndDesigner.btn_saveAndclose);
			_wait(2000);



//*******Nagigate to SFM Wizard and Create Wizard and Add Above Transaction to it**********
				$bo_act_navigation.navigateToSfmWizard();
				$bo_act_SFW.createWizardGeneralInfo($objName,$wizardname,$wizardID);
				$bo_act_SFW.createWizardStep($fieldActnType,$actnName,$executionMode);

//******Launch the Wizard in delivery for WO object**************

			$bo_act_sfmVerifyWorkOrder.verifyWizardOnWOObj($wizardButtonName);

//getting work order number diplayed
		var	$workOderNum1= _getText(_heading1("/WO-/")); //Modified for Lightning
		_log("wo1 "+$workOderNum1);
		
		_wait(3000);

////********Get Value of fields account ,contact ,First Assigned Date, problem description,order status,Is exported,service duration  from before saving Wizard in delivery
if(_isVisible($bo_pg_sfmVerifyWorkOrder.getDisplayedAccount)){
		var $accountNum1=_getText($bo_pg_sfmVerifyWorkOrder.getDisplayedAccount);
		_log($accountNum1);
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.getDisplayContact)){
	var $contactNum1=_getText($bo_pg_sfmVerifyWorkOrder.getDisplayContact);
	_log($contactNum1);
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.firstAssignedDateTime)){
	var $firstAsignedDate1=_getText($bo_pg_sfmVerifyWorkOrder.firstAssignedDateTime);
	_log($firstAsignedDate1);
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.problemDescription)){
	var $probDes1=_getText($bo_pg_sfmVerifyWorkOrder.problemDescription);
	_log($probDes1);
	if($probDes1=""){
		_doubleClick($bo_pg_sfmVerifyWorkOrder.problemDescription);
		_setStrictVisibilityCheck(true);
		_setValue($bo_pg_sfmVerifyWorkOrder.describeProblem,"No Problem");
//		_click($bo_pg_sfmVerifyWorkOrder.btn_ok);
		_click($bo_pg_sfmVerifyWorkOrder.btn_save);
	}
		
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.orderStatus)){
	var $orderStatus1=_getText($bo_pg_sfmVerifyWorkOrder.orderStatus);
	_log($orderStatus1);
}

if(_isVisible($bo_pg_sfmVerifyWorkOrder.isExportedBeforeClick)){
	//_doubleClick($bo_pg_sfmVerifyWorkOrder.isExportedBeforeClick);
	var $isExported1=_getText($bo_pg_sfmVerifyWorkOrder.isExportedBeforeClick);	
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.serviceDuration)){
	var $temp=_getText($bo_pg_sfmVerifyWorkOrder.serviceDuration);
	_log($temp);
		var $res = $temp.replace(",", "");
		var $servDuration1=Math.round($res);	
}
//****Click on Wizard and Save it without entering anything			
			$bo_act_sfmVerifyWorkOrder.clkOnWizard($wizardButtonName);

			while(_isVisible(_image("svmx-action-col-icon svmx-action-col-0   svmx-sfmd-edit-icon"))==true){
				_click(_image("svmx-action-col-icon svmx-action-col-1   svmx-sfmd-delete-icon"));
			}

			_click($bo_pg_addEditProdServDelivery.icon_Save);
			_selectDomain();
			_wait(6000, _isVisible(_heading1("/WO-/"))); //Modified for Lightning

//Getting WO after saving SFM wizard in Delivery
			var $workOderNum2=_getText(_heading1("/WO-/")); //Modified for Lightning

//***********Get Value of fields account ,contact,First Assigned Date,problem description,order status,Is exported,service duration after saving Wizard in Delivery***********
if(_isVisible($bo_pg_sfmVerifyWorkOrder.getDisplayedAccount)){
	var $accountNum2=_getText($bo_pg_sfmVerifyWorkOrder.getDisplayedAccount);
	_log($accountNum2);
}

if(_isVisible($bo_pg_sfmVerifyWorkOrder.getDisplayContact)){
	var $contactNum2=_getText($bo_pg_sfmVerifyWorkOrder.getDisplayContact);
	_log($contactNum2);
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.firstAssignedDateTime)){
	var $firstAsignedDate2=_getText($bo_pg_sfmVerifyWorkOrder.firstAssignedDateTime);
	_log($firstAsignedDate2);
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.problemDescription)){
	var $probDes2=_getText($bo_pg_sfmVerifyWorkOrder.problemDescription);
	_log($probDes2);
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.orderStatus)){
	var $orderStatus2=_getText($bo_pg_sfmVerifyWorkOrder.orderStatus);
	_log($orderStatus2);
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.isExportedBeforeClick)){
	
	var $isExported2=_getText($bo_pg_sfmVerifyWorkOrder.isExportedBeforeClick);	
}
if(_isVisible($bo_pg_sfmVerifyWorkOrder.serviceDuration)){
	var $temp=_getText($bo_pg_sfmVerifyWorkOrder.serviceDuration);	
	_log($temp);
		var $res = $temp.replace(",", "");
		var $servDuration2=Math.round($res);
}

//Verify Work Order and it corresponding fields(Created above) for scenario of before Save and after save
				if ( $workOderNum1!=$workOderNum2){
					_log("New WorkOrder Created");
				}
					if($accountNum1==$accountNum2){
						_log("Account Matched");
					}
					if($contactNum1==$contactNum2){
						_log("Contact Num Matched");
					}
					
//					if(_isVisible($bo_pg_sfmVerifyWorkOrder.firstAssignedDateTime)){
//						var $firstAsignedDate2=_getText($bo_pg_sfmVerifyWorkOrder.firstAssignedDateTime);
//						var res = $firstAsignedDate2.split(" ");
//
//						var $res = $firstAsignedDate2.split(" ");
//						var $temp=$res[0];
//						var $temp1=$temp.split("/");
//						var $temp2=$temp1[0];
//						var $temp3=$temp1[1];
//
//						if($temp2<10){
//						$temp2='0'+$temp1[0];
//						}
//						if($temp3<10){
//						$temp3='0'+$temp1[1];
//						}
//							$firstAsignedDate2=$temp2+"/"+$temp3+"/"+$temp1[2];	
//						}
					
					if($firstAsignedDate1==$firstAsignedDate2){
						_log("First Assigned Date Matched");
					}
					if($probDes1==$probDes2){
						_log("Problem Description Matched");
					}
					if($orderStatus1==$orderStatus2){
						_log("Order Status Matched");
					}
					if($isExported1==$isExported2){
						_log("Is Exported value Matched");
					}
					if($servDuration1==$servDuration1){
						_log("Service duration Matched");
					}
						

//******Go Back Template Designer page of SFM and add different data type fields to its header section*******				
//		_click(_link("Home"));
//		_wait(2000);
		$bo_act_login.login($g_url,$bac_un,$bac_pwd);
		$sfm_act_lightningConfig.switchToLightning();
		$bo_act_navigation.navigateToSfmTransactionDesigner();
		$bo_act_SFM.editCustomWizard($sfmName);
		_wait(6000,_isVisible(_f("main").tab("Screen Designer")));
		$bo_act_SFM.addFieldToHeaderOfScreenDesigner("Contact");
		$bo_act_SFM.addFieldToHeaderOfScreenDesigner("First Assigned DateTime");
		_click($bo_pg_manageWOLineUsageForSorting.sel_selHeaderOption);
		_click($bo_pg_manageWOLineUsageForSorting.txt_searchItem);
		_setValue($bo_pg_manageWOLineUsageForSorting.txt_searchItem,"Service Duration");
		_doubleClick(_f("main").s_label("Service Duration (in Seconds)"));
		_wait(1000);
		
		$bo_act_SFM.addFieldToHeaderOfScreenDesigner("Problem Description");
		$bo_act_SFM.addFieldToHeaderOfScreenDesigner("Order Status");
		$bo_act_SFM.addFieldToHeaderOfScreenDesigner("Is Exported");
		
		
		_click($bo_pg_sfmTransactionAndDesigner.btn_pageLayoutSave);
		_click($bo_pg_sfmTransactionAndDesigner.btn_saveAndclose);
		_wait(3000);

//Go to Wizard, Click in Wizard, Fetch the data displayed on specified fields and save
$bo_act_sfmVerifyWorkOrder.verifyWizardOnWOObj();
$bo_act_sfmVerifyWorkOrder.clkOnWizard($wizardButtonName);

//var $actValConsole=_getText($bo_pg_sfmVerifyWorkOrder.accountValueInConsole);
//var $contValConsole=_getText($bo_pg_sfmVerifyWorkOrder.contactValueInConsole);	
var $srvDurValConsole=_getText($bo_pg_sfmVerifyWorkOrder.servDurationInConsole);
_log($srvDurValConsole);
var $prbDesValConsole=_getText($bo_pg_sfmVerifyWorkOrder.probDescripInConsole);
_log($prbDesValConsole);
var $ordStaValConsole=_getText($bo_pg_sfmVerifyWorkOrder.ordStatusInConsole);
_log($ordStaValConsole);
var $fstAssignedDateConsole=_getText($bo_pg_sfmVerifyWorkOrder.fstAssnedDateInConsole);
var $fstAssignedTimeConsole=_getText($bo_pg_sfmVerifyWorkOrder.fstAssnedTimeInConsole);
var $fstAssignedValConsole = $fstAssignedDateConsole+" "+$fstAssignedTimeConsole;
_log($fstAssignedValConsole);
_click($bo_pg_addEditProdServDelivery.icon_Save);
_wait(6000, _isVisible(_heading1("/WO-/"))); //Modified for Lightning

//*******Compare the abve fetched data with before saving data and after saving data.****

_assertEqual($srvDurValConsole,$servDuration1,"Service duration not Matching");
//_assertNotEqual($prbDesValConsole,$probDes1,"Problem Description is Matching");
_assertEqual($ordStaValConsole,$orderStatus1,"Order Status is not Matching");
_assertEqual($fstAssignedValConsole,$firstAsignedDate1,"First Assigned Date is Matching");

_assertEqual($srvDurValConsole,$servDuration2,"Service duration not Matching");
_assertEqual($prbDesValConsole,$probDes2,"Problem Description is not Matching");
_assertEqual($ordStaValConsole,$orderStatus2,"Order Status is not Matching");
//_assertEqual($fstAssignedValConsole,$firstAsignedDate2,"First Assigned Date is not Matching");


//*****************Deleteing testdata************
$bo_act_navigation.navigateToSfmWizard();
_setSelected($bo_pg_sfmWizard.sel_objPrevMaintPlan,$objName	);
$bo_act_SFW.deleteWizard($wizardname);	
$bo_act_navigation.navigateToSfmTransactionDesigner();
$bo_act_SFM.deleteSFM($sfmName);
_setSpeed($g_stepSpeed);

$RS_5025.end();

