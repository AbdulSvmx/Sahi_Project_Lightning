var $RS_10418 = _testcase("RS_10313","Verify Dependent picklist's values when Controlling picklist is not present in SFM process for header");
$RS_10418.start();

//Variables used
var $object_name = "Work Order";
var $wo_picklist = "Order Status";
var $processName = "RS_10418";
var $process_to_clone = "Manage Work Order Lines - Usage";
var $dependentPicklist = "Order Type";
var $ctrl_unique_values = ["Open","Closed"];
var $ctrl_picklist_values = ["Open","Open","Closed"];
var $dep_picklist_values = ["Depot Repair","Field Service","Field Service"];
var $ctr = 0;
var $fields_array = [];
$fields_array.push($dependentPicklist);
var $currentWizardName = $wizardName[2];
var $success_message = "Work Order was saved.";
//Appending current timestamp to process name to make it unique.

var $timeStamp = $bo_act_navigation.getCurrentTimeStamp();
$processName = $processName + "_" + $timeStamp;
var $pageLayoutName = $processName + "pg";
var $myDomain = "/lightning/";
//**************************************************************************************
//Login and switch to lightning
//$bo_act_login.login($g_url,$bac_un,$bac_pwd);
$bo_act_login.login($g_url,$sfmUsn,$sfmPwd);
$sfm_act_lightningConfig.switchToLightning();


//Navigate to Object manager and navigate to work order object.
$sfm_act_lightningConfig.navigateToObjectsInLightning($object_name);
_selectWindow("/"+$object_name+"/");
_click(_link("Fields & Relationships"));


_setValue(_searchbox("globalQuickfind"),$wo_picklist);
_click(_link($wo_picklist));
_selectDomain($myDomain);


//Delete existing dependencies and create new one.
if (_exists($sfm_pg_wo.ordertype_dependency))
{	
   
	_expectConfirm($sfm_pg_wo.delete_link_picklist);
	_click($sfm_pg_wo.delete_link_picklist);
   
}
_click($sfm_pg_wo.btn_new_field_dependency);
_setSelected($sfm_pg_wo.picklist_controller, "Order Status");
_setSelected($sfm_pg_wo.picklist_dependent, "Order Type");
_click($sfm_pg_wo.btn_continue);
for(var $i=0;$i<$ctrl_picklist_values.length;$i++){
	$sfm_act_lightningConfig.addDependentControllingPicklistValues($wo_picklist,$ctrl_picklist_values[$i],$dep_picklist_values[$i]);
}

_expectConfirm($sfm_pg_wo.btn_save_dep_picklist);
_click($sfm_pg_wo.btn_save_dep_picklist);
_selectDomain();
_closeWindow();
_selectWindow();


//Navigate to servicemax setup and setup required process.
    _setSpeed(3000);
	$bo_act_navigation.navigateToSfmTransactionDesigner();
	//_selectDomain();
	$sfm_act_SFM.selectSFM($process_to_clone,false);
	_click($bo_pg_sfmTransactionAndDesigner.btn_clone);
	_wait(60000, _isVisible($bo_pg_sfmTransactionAndDesigner.txt_name));
	_setValue($bo_pg_sfmTransactionAndDesigner.txt_name,$processName);
	//_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmTransactionId,$processName);
	_click($bo_pg_sfmTransactionAndDesigner.btn_finalQuickSave);
	_click($bo_pg_sfmTransactionAndDesigner.btn_proceed_anyways);
	_click($bo_pg_sfmTransactionAndDesigner.btn_qualifyingCriteriaAndFieldMapping);
	//Edit existing Qualification criteria to support closed work orders as per test case.
	//No separate function written as this is a one time setup.
	_click($bo_pg_sfmTransactionAndDesigner.btn_newLineForQc);
	_setSelected(_f("main").s_combobox("fieldCombo[1]"), "Order Status");
	_setSelected(_f("main").s_combobox("valuesCombo[1]"), "Closed");
	_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmSavePageLayoutAsId, "1 OR 2");
	_setValue($bo_pg_sfmTransactionAndDesigner.txt_saveExprAs, $processName);;
	_setValue($bo_pg_sfmTransactionAndDesigner.txt_inputIdAs, $processName);
	_click(_f("main").s_button("Save As"));
	_assertVisible($bo_pg_sfmTransactionAndDesigner.label_exprSaved);
	_click($bo_pg_sfmTransactionAndDesigner.btn_quickSave1);
	if(_condition(_isVisible($bo_pg_sfmTransactionAndDesigner.btn_proceed_anyways))){
		_click($bo_pg_sfmTransactionAndDesigner.btn_proceed_anyways);
	}
	_assertVisible($bo_pg_sfmTransactionAndDesigner.label_sfmTxnSaved);
	_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
	$bo_act_navigation.designHeaderScreen($pageLayoutName, $fields_array);
	_click($bo_pg_sfmTransactionAndDesigner.btn_finalQuickSave);
	$sfm_act_wizards.addToWizard($object_name,$currentWizardName,"SFM",$processName);
	_selectDomain();
	//test from here.
	var $wo_number = $sfm_act_createCustomWizard.createWowithdateliterals();
	_selectDomain();
	//Launch SFM delivery

	$bo_act_navigation.navigateToCreatedRecordUsingGlobalSearch($wo_number);
	for($z=0;$z<$ctrl_unique_values.length;$z++){
		
		//Steps to edit wo and save
		_click($sfm_pg_wo.btn_wo_edit);
		_click(_link(0,_near(_span("/"+$wo_picklist+"/",_in(_div("/modal-container/"))))));
		_click(_link($ctrl_unique_values[$z]));
		_click($sfm_pg_wo.btn_wo_edit_save);
		_wait(2000);
		_assertVisible(_span($success_message));
		$sfm_act_createCustomWizard.clickWizardlinks($processName);
		_selectDomain($domainName);
		var $actual_list = [];
		//Verify the count of values first
		_wait(4000);
        _click(_div("/sfm-picklist/",_rightOf(_div($dependentPicklist))));
        _wait(1000);
		var $no_of_values = _count("_listItem", "/.*/", _under(_div($dependentPicklist)));
		
		for($ctr = 1;$ctr < $no_of_values;$ctr++ ){
			$actual_list.push(_getText(_listItem($ctr), _under(_div($dependentPicklist))));
		}
		var $expected_list = [];
		//Verify the values one by one.

		 var $i = 0;var $j = 0;
		 for ($j=0;$j<$ctrl_picklist_values.length;$j++) {
		 	if($ctrl_picklist_values[$j] === $ctrl_unique_values[$z]) {
		 		$i = $i+1;
		 		$expected_list.push($dep_picklist_values[$j]);
		 	}
		 }

		_assertEqualArrays($expected_list, $actual_list);
		_click($sfm_pg_wo.link_delivery_save);
		_wait(4000);
		_selectDomain();

		}
	//************************************************************************************
	//RS-10417
_log("Starting execution of RS-10417 by adding Controlling picklist in the screen designer")
//Navigate to servicemax setup.
$sfm_act_createCustomWizard.clickWizardlinks($processName);
_wait(5000);
_selectDomain($domainName);
_click($sfm_pg_wo.btn_arrowNextToGetPrice);
_assertVisible($sfm_pg_wo.link_launchSfmDesigner);
_click($sfm_pg_wo.link_launchSfmDesigner);
_selectDomain();
_selectWindow("/SFM Transaction Designer/");
_wait(10000);
_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
$fields_array = [];
$fields_array.push($wo_picklist);
$bo_act_navigation.editHeaderScreen($fields_array,$dependentPicklist);	
_click($bo_pg_sfmTransactionAndDesigner.btn_finalQuickSave);
_closeWindow();
_selectWindow();
$bo_act_navigation.navigateToCreatedRecordUsingGlobalSearch($wo_number);
$sfm_act_createCustomWizard.clickWizardlinks($processName);
_selectDomain($domainName);
var $actual_list = [];
for(var $z=0;$z<$ctrl_unique_values.length;$z++){
	_click(_div("/sfm-picklist/",_rightOf(_div($wo_picklist))));
	_click(_listItem($ctrl_unique_values[$z]));
	_wait(1000);
	_click(_div("/sfm-picklist/",_rightOf(_div($dependentPicklist))));
	_wait(1000);
	var $x = _count("_listItem","/.*/");
	//_log($x);
	var $i = 0;
	
	for($i=0;$i<$x;$i++){
		if(_condition(_isVisible(_listItem($i)))){
			$actual_list.push(_getText(_listItem($i)));
		}
	}
	//Removing the None option from the array.
	var $index = $actual_list.indexOf("--None--");
	$actual_list.splice($index,1);
	$i = 0;$j = 0;
	 for ($j=0;$j<$ctrl_picklist_values.length;$j++) {
	 	if($ctrl_picklist_values[$j] === $ctrl_unique_values[$z]) {
	 		$i = $i+1;
	 		$expected_list.push($dep_picklist_values[$j]);
	 	}
	 }
	 _assertEqualArrays($expected_list, $actual_list,"Dependent values are as expected");	
	 
}
_selectDomain();
$RS_10418.end();
//***********************************************************************************************************

		



