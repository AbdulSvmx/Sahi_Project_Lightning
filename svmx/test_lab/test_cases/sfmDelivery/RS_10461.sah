var $rs_10461 = _testcase("RS_10461","Verify Editing of Advanced expression in Header and child. Also verify deleting of Advanced Expression.");
$rs_10461.start();

		//Pre_Requesite
		//Create Account
		var $AccountName=$bo_act_common.generateRandomName("RS10461_Account_");
		var $objName= "Account";
		var $obJson = "{\"Name\":\""+$AccountName+"\"}";
		$AccountID=$sfm_act_restApiMethods.postRestApi($sfmlUsn,$sfmlPwd,$sfmClientId,$sfmConsumerSecret,$sfmOrgInstance,$objName,$obJson,"POST");
		_log("Account: "+$AccountName);
		
		//Create Product
		var $objName= "Product2";
		var $WDpartName=new Array;
		var $ProductID=new Array;
		for (var $i = 0; $i < 2; $i++) {
			$WDpartName[$i]=$bo_act_common.generateRandomName("RS10461_Prod_");
			var $obJson = "{\"Name\":\""+$WDpartName[$i]+"\",\"ProductCode\":\""+$WDpartName[$i]+"\",\""+$orgnamespace+"__Product_Line__c\":\"Storage\",\""+$orgnamespace+"__Product_Type__c\":\"Consumable\"}";
			$ProductID[$i]=$sfm_act_restApiMethods.postRestApi($sfmlUsn,$sfmlPwd,$sfmClientId,$sfmConsumerSecret,$sfmOrgInstance,$objName,$obJson,"POST");
			_log("Product Name: "+$WDpartName[$i]);	
		}
		
		//Create IB
		var $IBSerialNo=$bo_act_common.generateRandomName("RS_10461_IB_");
		var $objName= $orgnamespace+"__Installed_Product__c";
		var $obJson = "{\"Name\":\""+$IBSerialNo+"\",\""+$orgnamespace+"__Company__c\":\""+$AccountID+"\",\""+$orgnamespace+"__Product__c\":\""+$ProductID[1]+"\",\""+$orgnamespace+"__Serial_Lot_Number__c\":\""+$IBSerialNo+"\"}";
		$IBfilterValue=$sfm_act_restApiMethods.postRestApi($sfmlUsn,$sfmlPwd,$sfmClientId,$sfmConsumerSecret,$sfmOrgInstance,$objName,$obJson,"POST");
		_log("IB: "+$IBSerialNo);
		
		//Work Order Creation
		var $woStatus="Open";
		var $WONumber=new Array;
		var $WOID=new Array;
		$objName= $orgnamespace+"__Service_Order__c";
		var $today=getDBDate(0,"-",0);
		for (var $i = 0; $i < 3; $i++) {
			if ($i==0) {
				$obJson = "{\""+$orgnamespace+"__Order_Status__c\":\"Open\",\""+$orgnamespace+"__Order_Type__c\":\"Field Service\",\""+$orgnamespace+"__Company__c\":\""+$AccountID+"\"}";
			}else if ($i==1) {
				$obJson = "{\""+$orgnamespace+"__Order_Status__c\":\"Open\",\""+$orgnamespace+"__Order_Type__c\":\"Field Service\",\""+$orgnamespace+"__Company__c\":\""+$AccountID+"\",\""+$orgnamespace+"__Billing_Type__c\":\"Warranty\",\""+$orgnamespace+"__Scheduled_Date__c\":\""+$today+"\"}";
			}else {
				$obJson = "{\""+$orgnamespace+"__Order_Status__c\":\"Closed\",\""+$orgnamespace+"__Order_Type__c\":\"Field Service\"}";
			}
			_log($obJson);
			$columnName = "Name";
			$filter="id";
			$filterValue=$sfm_act_restApiMethods.postRestApi($sfmlUsn,$sfmlPwd,$sfmClientId,$sfmConsumerSecret,$sfmOrgInstance,$objName,$obJson,"POST");
			$WO =$sfm_act_restApiMethods.getRestApi($sfmlUsn,$sfmlPwd,$sfmClientId,$sfmConsumerSecret,$sfmOrgInstance,"GET", $objName, $columnName, $filter, $filterValue);
			_log("WO number: "+$WO);
			$WOID[$i]=$filterValue;
			$WONumber[$i]=$WO;
		}
		
		$objName="RecordType";
		$filter=["DeveloperName","SobjectType"];
		$filterValue=["UsageConsumption",$orgnamespace+"__Service_Order_Line__c"];
		$columnName = "id";
		$recTypeID =$sfm_act_restApiMethods.getRestApi($sfmlUsn,$sfmlPwd,$sfmClientId,$sfmConsumerSecret,$sfmOrgInstance,"GET", $objName, $columnName, $filter, $filterValue);
		_log("Record Type ID: "+$recTypeID);
		
		//Create WD(parts) under Open WO
		for (var $i = 0; $i < 2; $i++) {
			$objName= $orgnamespace+"__Service_Order_Line__c";
			if ($i==0) {
				$obJson = "{\""+$orgnamespace+"__Line_Type__c\":\"Parts\",\"RecordTypeId\":\""+$recTypeID+"\",\""+$orgnamespace+"__Product__c\":\""+$ProductID[$i]+"\",\""+$orgnamespace+"__Activity_Type__c\":\"Installation\",\""+$orgnamespace+"__Requested_City__c\":\"Mysore\",\"Account__c\":\""+$AccountID+"\",\""+$orgnamespace+"__Service_Order__c\":\""+$WOID[0]+"\"}";
			}else {
				$obJson = "{\""+$orgnamespace+"__Line_Type__c\":\"Parts\",\"RecordTypeId\":\""+$recTypeID+"\",\""+$orgnamespace+"__Product__c\":\""+$ProductID[$i]+"\",\""+$orgnamespace+"__Activity_Type__c\":\"Installation\",\""+$orgnamespace+"__Requested_City__c\":\"Bangalore\",\""+$orgnamespace+"__Billable_Quantity__c\":\"3\",\""+$orgnamespace+"__Date_Requested__c\":\""+$today+"\",\"Account__c\":\""+$AccountID+"\",\""+$orgnamespace+"__Serial_Number__c\":\""+$IBfilterValue+"\",\""+$orgnamespace+"__Service_Order__c\":\""+$WOID[0]+"\"}";
			}
		
			$columnName = "Name";
			$filter="id";
			$filterValue=$sfm_act_restApiMethods.postRestApi($sfmlUsn,$sfmlPwd,$sfmClientId,$sfmConsumerSecret,$sfmOrgInstance,$objName,$obJson,"POST");
			$WDNumber =$sfm_act_restApiMethods.getRestApi($sfmlUsn,$sfmlPwd,$sfmClientId,$sfmConsumerSecret,$sfmOrgInstance,"GET", $objName, $columnName, $filter, $filterValue);
			_log("WD number: "+$WDNumber);
		}

	//Login to App
	$bo_act_login.login($g_url,$sfmlUsn,$sfmlPwd);

	//clone standard SFM
	var $sfmNameToBeCloned="Create Usage Lines from Estimates";
	var $sfmName=$bo_act_common.generateRandomName("rs_10461_");
	var $sfmTemplateSaveAsName=$bo_act_common.generateRandomName("SFM_Page_");
	var $sfmTemplate="SVMXSTD: Manage WO Usage Lines";
	var $fieldName="";
	var $containerName="";
	$sfm_act_SFM.cloneTDM016($sfmNameToBeCloned, $sfmName, false, $sfmTemplateSaveAsName, $sfmTemplate, $fieldName, $containerName);
	
	//adding qualifying criteria for parent object
	var $comboField=["Order Status","Order Type"];
	var $comboConditions=["Equals","Equals"];
	var $toggleButton=["",""];
	var $comboInput=["Open","Field Service"];
	var $advExpr="1 AND 2";
	var $errMsg="This record does not qualify as the Order Status is NOT Open and Order Type is NOT Field Service.";
	var $exprsnName = $bo_act_common.generateRandomName("RS_10461_expr_");
	var $ExprFieldsDetails=[$comboField,$comboConditions,$toggleButton,$comboInput,$advExpr,$errMsg,$exprsnName];
	$sfm_act_Transactions.sfmQualifyingCriteriaieldMappings("Work Order", $ExprFieldsDetails, "", "");
		
	//adding qualifying criteria for child object - part
	var $childcomboField=["Activity Type","Requested City"];
	var $childcomboConditions=["Equals","Equals"];
	var $childtoggleButton=["",""];
	var $childcomboInput=["Installation","Mysore"];
	var $childadvExpr="1 AND 2";
	var $childerrMsg="";
	var $childexprsnName = $bo_act_common.generateRandomName("RS_10461_exprPart_");
	var $childExprFieldsDetails=[$childcomboField,$childcomboConditions,$childtoggleButton,$childcomboInput,$childadvExpr,$childerrMsg,$childexprsnName];
	$sfm_act_Transactions.sfmQualifyingCriteriaieldMappings("Parts", $childExprFieldsDetails, "", "");
	
	_click($bo_pg_sfmTransactionAndDesigner.btn_saveAndclose);
	
	//add SFM to expression Wizard
	var $wizardObject="Work Order";
	var $wizardName1 =$wizardName[6];
	var $wizardType="SFM";
	var $profile="";
	var $handOver=false;
	_log($wizardName1);
	$sfm_act_wizards.addToWizard($wizardObject, $wizardName1, $wizardType, $sfmName, $handOver, $profile);  

	//Assert SFM transaction is launched and childline display
	$sfm_act_common.globalSearchInLightning($WONumber[0]);
	_setStrictVisibilityCheck(true);
	$sfm_act_createCustomWizard.clickWizardBtn($sfmName);
	_assertExists(_div("/"+$sfmName+"/"));
	_click($sfm_pg_screenDesigner.link_Parts);
	_assertExists(_div($WDpartName[0],_in(_div("SFMCompositeGrid1-bodyWrap"))));
	_setStrictVisibilityCheck(false);
	
	//Logout and login: this is code is added due to limitation of sahi.
	//Limitation: we cann't perform action on transaction page twice in single login
	$bo_act_navigation.navigateToHome();
	$sfm_act_lightningConfig.logoutInLightning();
	_wait(10000,_isVisible($bo_pg_login.txt_email));
	$bo_act_login.login($g_url,$sfmlUsn,$sfmlPwd);
	
	//Update the SFM Transaction
	_selectDomain();
	$bo_act_navigation.navigateToSfmTransactionDesigner();
	_wait(10000);
	$sfm_act_SFM.selectSFM($sfmName, true);
	_wait(5000,_isVisible());
	_click(_f("main").s_label($sfmName));
	_wait(10000,_isVisible($sfm_pg_screenDesigner.btn_qualifyingCriteriaAndFieldMapping));
	
	_click($sfm_pg_screenDesigner.btn_qualifyingCriteriaAndFieldMapping);
	_wait(10000,_isVisible($sfm_pg_screenDesigner.lbl_qualifyingCriteriaMapping));
	_click(_f("main").s_label("Work Order").near($sfm_pg_screenDesigner.lbl_qualifyingCriteriaMapping));
	_wait(10000,_isVisible($sfm_pg_screenDesigner.lbl_headerQualificationLabel));
	
	//adding qualification criteria for parent object
	var $comboField=["Account","Billing Type","Date1"];
	var $comboConditions=["Is Not Null","Equals","Equals"];
	var $toggleButton=["","",""];
	var $comboInput=["","Warranty","Today"];
	var $advExpr="(((1 and 2) or 3) and (4 or 5))";
	var $errMsg="This record does not qualify as the Order Status is NOT Open and Order Type is NOT Field Service.";
	$sfm_act_Transactions.sfmUpdateExpression($comboField, $comboConditions, $toggleButton, $comboInput, $advExpr, $errMsg);
	$sfm_act_Transactions.sfmSvaeExpression($exprsnName, $exprsnName, "Save");
	
	_click($sfm_pg_screenDesigner.btn_qualifyingCriteriaAndFieldMapping);
	_wait(10000,_isVisible($sfm_pg_screenDesigner.lbl_qualifyingCriteriaMapping));
	_click(_f("main").s_label("Parts").near($sfm_pg_screenDesigner.lbl_qualifyingCriteriaMapping));
	_wait(10000,_isVisible($sfm_pg_screenDesigner.lbl_headerQualificationLabel));
	
	//adding qualifying criteria for child object - part
	var $childcomboField=["Billable Qty","Date Required","IB Serial Number"];
	var $childcomboConditions=["Equals","Equals","Contains"];
	var $childtoggleButton=["","",""];
	var $childcomboInput=["1","Tomorrow","RS_10461_IB"];
	var $childadvExpr="(((1 and 2) or 3) and (4 or 5))";
	var $childerrMsg="";
	$sfm_act_Transactions.sfmUpdateExpression($childcomboField, $childcomboConditions, $childtoggleButton, $childcomboInput, $childadvExpr, $childerrMsg);
	
	$sfm_act_Transactions.sfmSvaeExpression($childexprsnName, $childexprsnName, "Save");
	_click($bo_pg_sfmTransactionAndDesigner.btn_saveAndclose);
	
	$sfm_act_common.globalSearchInLightning($WONumber[1]);
	_setStrictVisibilityCheck(true);
	$sfm_act_createCustomWizard.clickWizardBtn($sfmName);
	_assertExists(_div("/"+$sfmName+"/"));
	_click($sfm_pg_screenDesigner.link_Parts);
	_assertNotExists(_div($WDpartName[0],_in(_div("SFMCompositeGrid1-bodyWrap"))));
	_setStrictVisibilityCheck(false);


	$sfm_act_common.globalSearchInLightning($WONumber[2]);
	_setStrictVisibilityCheck(true);
	$sfm_act_createCustomWizard.clickWizardBtn($sfmName);
	_selectDomain($g_domain);
	_wait(10000,_isVisible(_div($errMsg)));
	_assertExists(_div($errMsg));
	_selectDomain();
	_setStrictVisibilityCheck(false);
	
	$bo_act_navigation.navigateToHome();
	$sfm_act_lightningConfig.logoutInLightning();
	_wait(10000);
	$bo_act_login.login($g_url,$sfmlUsn,$sfmlPwd);
	
	//Remove Advance criteria
	$bo_act_navigation.navigateToSfmTransactionDesigner();
	_wait(10000);
	//_selectDomain();
	$sfm_act_SFM.selectSFM($sfmName, true);
	_wait(5000,_isVisible());
	_click(_f("main").s_label($sfmName));
	_wait(10000,_isVisible($sfm_pg_screenDesigner.btn_qualifyingCriteriaAndFieldMapping));
	_click($sfm_pg_screenDesigner.btn_qualifyingCriteriaAndFieldMapping);
	_wait(10000,_isVisible($sfm_pg_screenDesigner.lbl_qualifyingCriteriaMapping));
	_click(_f("main").s_label("Work Order").near($sfm_pg_screenDesigner.lbl_qualifyingCriteriaMapping));
	_wait(10000,_isVisible($sfm_pg_screenDesigner.lbl_headerQualificationLabel));
	
	//adding qualifying criteria for parent object
	var $comboField=[];
	var $comboConditions=[];
	var $toggleButton=[];
	var $comboInput=[];
	var $advExpr="";
	var $errMsg="This record does not qualify as the Order Status is NOT Open and Order Type is NOT Field Service.";
	$sfm_act_Transactions.sfmUpdateExpression($comboField, $comboConditions, $toggleButton, $comboInput, $advExpr, $errMsg);
	$sfm_act_Transactions.sfmSvaeExpression($exprsnName, $exprsnName, "Save");
	_click($bo_pg_sfmTransactionAndDesigner.btn_saveAndclose);
	
	$sfm_act_common.globalSearchInLightning($WONumber[2]);
	_setStrictVisibilityCheck(true);
	$sfm_act_createCustomWizard.clickWizardBtn($sfmName);
	_selectDomain($g_domain);
	_wait(10000,_isVisible(_div($errMsg)));
	_assertExists(_div($errMsg));
	_selectDomain();
	_setStrictVisibilityCheck(false);
	
	
	$sfm_act_lightningConfig.logoutInLightning();

//** function to create Work**'
function getDBDate($futureYear, $seperator,$futureDay){
	var $retDate=$bo_act_common.getfutureDate($futureYear, $seperator, $futureDay);
	var $dateDetails=$retDate.split("-");
	var $retDate=$dateDetails[2]+$seperator+$dateDetails[0]+$seperator+$dateDetails[1];
	//_log("Formated Date: "+$retDate);
	return $retDate;
}		

function createWO_RS10461($orderStatus,$orderType,$AccountName, $billingType,$Date1){
		_selectDomain();
		_wait(3000);
		$sfm_pg_wo.openAppLauncher();
		_wait(3000);
		$sfm_act_createCustomWizard.clickSvmxWoLink();
		_wait(5000,_isVisible($sfm_pg_wo.btn_wo_new));
		_setStrictVisibilityCheck(true);
		_click($sfm_pg_wo.btn_wo_new);
		addWOfieldValue($orderStatus,$orderType,$AccountName, $billingType,$Date1);
		//_wait(10000);
		_click($sfm_pg_wo.btn_wo_edit_save);
		_wait(10000,_isVisible($sfm_pg_wo.label_wo));
		$woName= _getText($sfm_pg_wo.label_wo);
		_log($woName);
		_setStrictVisibilityCheck(false);
		return $woName;
};

function addWOfieldValue($orderStatus,$orderType,$AccountName, $billingType,$Date1){
	_setStrictVisibilityCheck(true);
	if ($orderStatus!="") {
		_click($sfm_pg_wo.link_woStatus);
		_click(_link($orderStatus));
	}
	if ($orderType!="") {
		_click($sfm_pg_wo.link_orderType);
		_click(_link($orderType));
	}
	if ($AccountName!="" && $AccountName!==null && $AccountName!=="Delete") {
		_click($sfm_pg_wo.txt_Account);
		_wait(3000,_isVisible($sfm_pg_wo.btn_WONewAccount));
		_click($sfm_pg_wo.btn_WONewAccount);
		
		_wait(10000,_isVisible($sfm_pg_wo.txt_accountName));
		_setValue($sfm_pg_wo.txt_accountName,$AccountName);
		_click($sfm_pg_wo.btn_saveAccount);
		_wait(5000,_isVisible($sfm_pg_wo.txt_Account));		
	}else if ($AccountName=="Delete") {
		_click(_link("Press Delete to Remove",_near($sfm_pg_wo.lbl_Account)));
	}
	if ($billingType!="" && $billingType!=null) {
		_click($sfm_pg_wo.link_billingType);
		_click(_link($billingType));
	}
	if ($Date1!="" && $Date1!=null) {
		_click($sfm_pg_wo.link_date1);
		_click($sfm_pg_wo.btn_today);
	}
	
	_setStrictVisibilityCheck(false);
		}


function addWorkDetailLine($recordType,$lineType,$activityType,$requesteCity,$billableQty,$dateRequired,$IBSerialNo,$AccountName){
	_click($sfm_pg_sfmDesigner.link_related);
	_click($sfm_pg_sfmDesigner.link_newWorkDetail);
	_click(_span("slds-radio--faux",_leftOf(_span($recordType,_in(_div("/modal-body/"))))));
	_click($sfm_pg_sfmDesigner.btn_next);	
	_setStrictVisibilityCheck(true);
	var $WDpartName=addWDfiledValues($lineType,$activityType,$requesteCity,$billableQty,$dateRequired,$IBSerialNo,$AccountName);
	_click($sfm_pg_sfmDesigner.btn_saveWorkDetail);
	_wait(5000,_isVisible($sfm_pg_sfmDesigner.msg_WDCreateConfirm));
	var $WorkDetailName=_getText(_link("/WL-.*/",_in(_div("/Line Number/")),_near(_span("Parts"))));
	_setStrictVisibilityCheck(false);
	_log("Work order detail Name: "+$WorkDetailName);
	return [$WorkDetailName,$WDpartName];
}
function addWDfiledValues($lineType,$activityType,$requesteCity,$billableQty,$dateRequired,$IBSerialNo,$AccountName){
	_setStrictVisibilityCheck(true);
	if ($lineType!="") {
		_click($sfm_pg_sfmDesigner.link_lineType);
		_click(_link($lineType));
	}
	if ($activityType!="") {
		_click($sfm_pg_sfmDesigner.link_activityType);
		_click(_link($activityType));
	}
	if ($requesteCity!="") {
		_setValue($sfm_pg_sfmDesigner.txt_requestedCity,$requesteCity);
	}
	if ($billableQty!="") {
		_setValue($sfm_pg_sfmDesigner.txt_billableQty,$billableQty);
	}
	if ($dateRequired!="" && $dateRequired!=null) {
		_click($sfm_pg_wo.txt_dateRequired);
		_click($sfm_pg_wo.btn_today);
	}	
	var $WDpartName=null;
	if ($IBSerialNo!="" && $IBSerialNo!==null) {
		_click($sfm_pg_sfmDesigner.txt_WDpart);
		_wait(3000,_isVisible($sfm_pg_sfmDesigner.btn_WDNewProduct));
		_click($sfm_pg_sfmDesigner.btn_WDNewProduct);
		
		_wait(4000,_isVisible($sfm_pg_sfmDesigner.lbl_WDProductName));
		$WDpartName="WDProduct"+$IBSerialNo;
		_setValue($sfm_pg_sfmDesigner.txt_newProductName,$WDpartName);
		_click($sfm_pg_sfmDesigner.btn_WDProductSave);
		_wait(5000,_isVisible($sfm_pg_sfmDesigner.lbl_WDPart));
		_setValue();
		
		
		_click($sfm_pg_sfmDesigner.txt_IBserialNo);
		_click($sfm_pg_sfmDesigner.btn_WDNewIB);
		_wait(10000,_isVisible($sfm_pg_sfmDesigner.txt_Product));
		_setValue($sfm_pg_sfmDesigner.txt_Product,$WDpartName);
		_click(_div($WDpartName,_near($sfm_pg_sfmDesigner.lbl_Product)));
		_setValue($sfm_pg_sfmDesigner.txt_SrSlotNo,$WDpartName);
		_setValue($sfm_pg_sfmDesigner.txt_Account,$AccountName);
		_click(_div($AccountName,_near(_span("Account",_in($sfm_pg_sfmDesigner.newIBWindow)))));
		_setValue($sfm_pg_sfmDesigner.txt_IBID,$WDpartName);
		_click($sfm_pg_sfmDesigner.link_IBStatus);
		_click(_link("Installed",_near(_span("Status",_in($sfm_pg_sfmDesigner.newIBWindow)))));
		_click($sfm_pg_sfmDesigner.btn_IBsave);		
		
	}	
	_setStrictVisibilityCheck(false);
	return $WDpartName;
}

function editWorkDetailLine($WorkDetail,$lineType,$activityType, $requesteCity, $billableQty, $dateRequired, $IBSerialNo, $AccountName){
	_setStrictVisibilityCheck(true);
	_click($sfm_pg_sfmDesigner.link_related);
	//_click(_link($WorkDetail));
	_wait(10000,_isVisible(_link($WorkDetail)));
	_click(_link("/Show/", _near(_link($WorkDetail))));
	_wait(5000,_isVisible($sfm_pg_sfmDesigner.link_editWD));
	_click($sfm_pg_sfmDesigner.link_editWD);
	_wait(10000,_isVisible(_heading2("Edit Work Detail")));
	//addWDfiledValues($lineType, $lineQTY,$WDcancelFD,$WDcloseFD,"");
	addWDfiledValues($lineType, $activityType, $requesteCity, $billableQty, $dateRequired, $IBSerialNo, $AccountName);
	_click($sfm_pg_sfmDesigner.btn_saveWorkDetail);
	_setStrictVisibilityCheck(false);
}


$rs_10461.end();