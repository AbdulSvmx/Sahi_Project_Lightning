//_includeOnce("../../../references/references.js");

//author - Mamata Rout

var $RS_7080 = _testcase("RS_7080", "Verify Save functionality on a Checklist Process");
$RS_7080.start();
_setSpeed(100);


var $checklistName=$bo_act_common.generateRandomName("7080Chklist");
//change  the name of $sfmTemplateSaveAsName before execution.
var $sfmTemplateSaveAsName=$bo_act_common.generateRandomName("7080Temp");
var $mapName=$bo_act_common.generateRandomName("7080Map");
var $objName="Work Order";
var $wizardname=$bo_act_common.generateRandomName("7080Wizard");
var $wizardID=$wizardname;
var $nameOfTranType="to generate a Checklist/Survey type of Process";
var $executionMode="Interactive";
var $fieldActnType="SFM";
var $actnName=$sfmName;
var $wizardButtonName=$sfmName
var $selectMapping="7080mapping";
var $idealTime="99";
var $invoiceNumber="INV999";

//*************Login to Servicemax App***********
$bo_act_login.login($g_url, $bac_unBase, $bac_pwdBase);

//*****Navgate to SFm Designer and create a new SFM of type source to Target All ********
			$bo_act_navigation.navigateToSfmTransactionDesigner();
			$bo_act_SFM.newChecklistTypeSFM($checklistName,$nameOfTranType,$objName);
			

$bo_act_SFM.selectTypeOfSfmTranToBeCreated($nameOfTranType);
			$bo_act_SFM.toCreateTheserecordDetails();

			
//************************
			_click($bo_pg_sfmTransactionAndDesigner.btn_qualifyingCriteriaAndFieldMapping);
			_click(_f("main").s_label("parts"));
			_click(_f("main").tab("Mapping(s)"));
			_setSelected(_f("main").s_combobox("searchCombo[2]"), $selectMapping);

//********** Adding header mapping fields to header section of screen designer and child fields to child sections************
			_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
			_wait(6000,_isVisible(_f("main").tab("Screen Designer")));
			_click($bo_pg_manageWOLineUsageForSorting.btn_screenDesignerNew);
			$bo_act_SFM.addFieldToHeaderOfScreenDesigner("Actual Resolution");
			$bo_act_SFM.addFieldToHeaderOfScreenDesigner("Invoice Number");
			_click($bo_pg_manageWOLineUsageForSorting.sel_selHeaderOption);
			_click($bo_pg_manageWOLineUsageForSorting.txt_searchItem);
			_setValue($bo_pg_manageWOLineUsageForSorting.txt_searchItem,"Idle Time");
			_doubleClick(_f("main").s_label("Idle Time (in Minutes)"))


			_click(_f("main").s_datagroup("dataGroup[3]"));
			_click(_f("main").s_textinput("searchText[4]"));
			_setValue(_f("main").s_textinput("searchText[4]"),"Billable Qty");
			_doubleClick(_f("main").s_label("Billable Qty[1]"));
			$bo_act_SFM.addChildLineToScreenDesigner("Start Date and Time");
			$bo_act_SFM.addChildLineToScreenDesigner("Received City");
			_click(_f("main").s_richtext("parts"));
			_click(_f("main").s_checkbox("Allow New"));
			_click(_f("main").s_checkbox("Allow Delete"));
			_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmSavePageLayoutAs, $sfmTemplateSaveAsName);
			_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmSavePageLayoutAsId, $sfmTemplateSaveAsName);
			
			_click($bo_pg_sfmTransactionAndDesigner.btn_pageLayoutSave);
			_wait(5000);
			_click($bo_pg_sfmTransactionAndDesigner.btn_saveAndclose);
			_wait(2000);

//*******Nagigate to SFM Wizard and Create Wizard and Add Above Transaction to it**********
				$bo_act_navigation.navigateToSfmWizard();
				$bo_act_SFW.createWizardGeneralInfo($objName,$wizardname,$wizardID);
				$bo_act_SFW.createWizardStep($fieldActnType,$actnName,$executionMode);

//******Launch the Wizard in delivery for WO object**************

			$bo_act_sfmVerifyWorkOrder.verifyWizardOnWOObj($wizardButtonName);


//****Click on Wizard and Save it without entering anything			
			$bo_act_sfmVerifyWorkOrder.clkOnWizard($wizardButtonName);
			while(_isVisible(_image("svmx-action-col-icon svmx-action-col-0   svmx-sfmd-edit-icon"))==true){
			_click(_image("svmx-action-col-icon svmx-action-col-1   svmx-sfmd-delete-icon"));
			}
		
			_click(_div("/-date-/"));
			_click(_span("Today"));
			_setValue(_textbox("Idle Time (in Minutes):"),$idealTime);
			_setValue(_textbox("Invoice Number:"),$invoiceNumber);
			var $actReso=_getText(_textbox(0,_rightOf(_label("Actual Resolution:"))));
			var $idealTime=_getText(_textbox("Idle Time (in Minutes):"));
			var $invoNum=_getText(_textbox("Invoice Number:"));
			_click(_span("svmx-btn-icon svmx-sfmd-add-line-icon"));
			_wait(5000);
			_click(_image("svmx-action-col-icon svmx-action-col-0   svmx-sfmd-edit-icon"));
			_wait(3000);
			var $billQty=_getText(_textbox("Billable Qty:"));
			var $recvCity=_getText(_textbox("Received City:"));
			var $statDtTime=_getText(_textbox(0,_rightOf(_label("Start Date and Time:"))));

			 _assertEqual($billQty,$idealTime,"Number Type data Type of child field is updated with header");
			 _assertEqual($recvCity,$invoNum,"Text Type data Type of child field is updated with header");
			_assertEqual($statDtTime,$actReso,"Date Type data Type of child field is updated with header");

		//********************************Deleteing testdata*****************************************************
		$bo_act_navigation.navigateToSfmWizard();
		_setSelected($bo_pg_sfmWizard.sel_objPrevMaintPlan,$objName	);
		$bo_act_SFW.deleteWizard($wizardname);	
		$bo_act_navigation.navigateToSfmTransactionDesigner();
		$bo_act_SFM.deleteSFM($sfmName);
		_setSpeed(100);

$RS_7080.end();


