var $rs_10313 = _testcase("RS_10313","Verify Dependent picklist's values when Controlling picklist is not present in SFM process for header");
$rs_10313.start();

//Variables used
var $object_name = "Work Order";
var $wo_picklist = "Order Status";
var $processName = "RS_10313_process";
var $pageLayoutName = "RS_10313_pagelayout"
var $process_to_clone = "Manage Work Order Lines - Usage";
var $dependent_picklist = "Order Type";
var $ctrl_unique_values = ["Open","Closed"];
var $ctrl_picklist_values = ["Open","Open","Closed"];
var $dep_picklist_values = ["Depot Repair","Field Service","Field Service"];
var $ctr = 0;
var $fields_array = [];
$fields_array.push($dependent_picklist);



//**************************************************************************************
//Login and switch to lightning
$bo_act_login.login($g_url,$bac_un,$bac_pwd);
$sfm_act_lightningConfig.switchToLightning();


//Navigate to Object manager and navigate to work order object.
$sfm_act_lightningConfig.navigateToObjectsInLightning($object_name);
_selectWindow("Work Order | Salesforce");
_click(_link("Fields & Relationships"));


_setValue(_searchbox("globalQuickfind"),$wo_picklist);
_click(_link($wo_picklist));
_selectDomain("lightningautomation--cfg2.cs21.my.salesforce.com");
_selectWindow();
//Delete existing dependencies and create new one.
if (_exists($sfm_pg_wo.ordertype_dependency))
{	
   
	_expectConfirm($sfm_pg_wo.delete_link_picklist);
	_click($sfm_pg_wo.delete_link_picklist);
   
}
_click($sfm_pg_wo.btn_new_field_dependency);
_setSelected($sfm_pg_wo.picklist_controller, "Order Status");
_setSelected($sfm_pg_wo.picklist_dependent, "Order Type");
_click($sfm_pg_wo.btn_continue);
for(var $i=0;i<$ctrl_picklist_values.length;i++){
	$sfm_act_lightningConfig.addDependentControllingPicklistValues($wo_picklist,$ctrl_picklist_values[$i],$dep_picklist_values[$i]);
}

_expectConfirm($sfm_pg_wo.btn_save_dep_picklist);
_click($sfm_pg_wo.btn_save_dep_picklist);
_selectDomain();
//Navigate to servicemax setup.
$bo_act_navigation.navigateToSfmTransactionDesigner();
if(!$bo_act_navigation.findIfCustomProcessExists($processName)) {
	_setValue($bo_pg_sfmTransactionAndDesigner.txt_yourCustomSfmTransactionsQuickFind,"");
	_click($bo_pg_sfmTransactionAndDesigner.btn_standardSfmTransaction);
	$sfm_act_SFM.selectSFM($process_to_clone,false);
	_click($bo_pg_sfmTransactionAndDesigner.btn_clone);
	_wait(60000, _isVisible($bo_pg_sfmTransactionAndDesigner.txt_name));
	_setValue($bo_pg_sfmTransactionAndDesigner.txt_name,$processName);
	_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmTransactionId,$processName);
	_click($bo_pg_sfmTransactionAndDesigner.btn_finalQuickSave);
	_click($bo_pg_sfmTransactionAndDesigner.btn_proceed_anyways);
	_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
	$bo_act_navigation.designHeaderScreen($pageLayoutName, $fields_array);
	_click($bo_pg_sfmTransactionAndDesigner.btn_finalQuickSave);
}
	$bo_act_navigation.navigateToSfmWizard();
	$sfm_act_wizards.addToWizard($object_name,"SFM",$wizard_name);
	_selectDomain();
	//test from here.
	$sfm_act_createCustomWizard.createWowithoutvalues();
	$sfm_act_createCustomWizard.clickWizardlinks($processName);
	_selectDomain("/visual.force.com/");
	_wait(5000);
	//Add steps to set order status
	for($m=0;$<$ctrl_unique_values;$m++){
		_click($sfm_pg_wo.btn_wo_edit);
		_click(_link($ctrl_unique_values[$m]));
		_click($sfm_pg_wo.btn_wo_edit_save);
	
	//Launch SFM delivery and verify values.
	$sfm_act_createCustomWizard.clickWizardlinks($processName);
	_click(_textbox("/sfm-picklist/",_in(_div($dependent_picklist))));
	_selectDomain("/visual.force.com/");
	_wait(5000);
	//Verify the count of values first
	var $no_of_values = _count("_listItem", "/.*/", _under(_div($wo_picklist)));
	$no_of_values = $no_of_values - 1;//Decrement one for the 'None' option.
	var $actual_list = [];
	for($ctr = 1;$ctr <= $no_of_values;$ctr++ ){
		$actual_list.push(_getText(_listItem($ctr), _under(_div($dependent_picklist))));
	}
	
	//Verify the values one by one.
	for($ctr = 0;$ctr < $ctrl_unique_values.length;$ctr++){
	 var $i = 0;var $j = 0;
	 for ($j=0;$j<$ctrl_picklist_values.length;$j++) {
	 	if($ctrl_picklist_values[j] === $ctrl_unique_values[$ctr]) {
	 		$i = $i+1;
	 		$expected_list.push($dep_picklist_values[$j]);
	 	}
	 }
	}
	_assertEqualArrays($expected_list, $actual_list,"FAIL");
	}
	$rs_10313.end();	



