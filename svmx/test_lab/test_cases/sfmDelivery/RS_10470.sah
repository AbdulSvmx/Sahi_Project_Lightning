var $RS_10470 = _testcase("RS_10470","Verify Value Map for new records - Header");
$RS_10470.start();
//Variables used
var $objectName = "Work Order";
var $processName = "RS_10470";
var $process_to_clone = "Create New Support Case";
var $sfmTemplate = "SVMXSTD: Manage WO Usage Lines";
var $isCustom = false;
var $ctr = 0;
var $i = 0;
var $success_message = "Work Order was saved.";
var $containerName = [];
var $fieldName=[];
var $fieldsToMap = ["Account","Record Type","Clock Paused Forever","Proforma Invoice Amount","Scheduled Date","Automation Date2","Automation Date3","First Queued DateTime","Started Driving To Location Date Time","Completed Date Time","Finished Onsite Date Time","Group Email","Automation multipicklist","Estimated Duration","Automation Percent","Automation Phone","Order Status","City","Street","Problem Description","Automation URL"];
var $containerName = ["Order Status","Order Status","Order Status","Order Status","Order Status","Order Status","Order Status","Order Status","Order Status","Order Status","Order Status","Order Status"];
var $currentWizardName = $wizardName[4];
var $productName = "Chrome";
var $lineType = "Parts";
var $fieldsAbsentInPage = [];
var $missingStdDataTypes = ["URL","Picklist (Multi-Select)","Percent","Phone"];
var $customFieldsNames = ["Automation URL","Automation multipicklist","Automation Percent","Automation Phone"];
var $pageLayoutForProfile = "SVMX Work Order - Admin";
var $myDomain = "/lightning/";
var $multiPicklistValues = ["Multipicklist1","Multipicklist2","Multipicklist3"];
var $tempFields = ["Age"];
var $mapType = "Value Map for New Records";

//Appending current timestamp to process name to make it unique.
var $timeStamp = $bo_act_navigation.getCurrentTimeStamp();
$processName = $processName + "_" + $timeStamp;
var $pageLayoutName = $processName + "pg";
var $mapName = $processName + "mp";

//**************************************************************************************
//Login and switch to lightning
$bo_act_login.login($g_url,$sfmlUsn,$sfmlPwd);
$sfm_act_lightningConfig.switchToLightning();
_wait(15000);

//Create custom fields if needed
$sfm_act_lightningConfig.addCustomFields($objectName, $customFieldsNames, $missingStdDataTypes, $myDomain,$multiPicklistValues);
_closeWindow();
_selectWindow();

//Create work order
var $wo_number = $sfm_act_createCustomWizard.createWowithdateliterals();
var $x = $fieldsToMap.indexOf("Record Type ID");
if($x != -1) {
		$fieldsToMap[$x] = "Record Type";
}

//Find missing fields in Work Order Page Layout and them to the layout
for($i=0;$i<$fieldsToMap.length;$i++){
	if(!$sfm_act_lightningConfig.findIfFieldPresentInPageLayout($fieldsToMap[$i])){
		$fieldsAbsentInPage.push($fieldsToMap[$i]);
	}	
}
_log($fieldsAbsentInPage);

if($fieldsAbsentInPage.length > 0){
	$sfm_act_lightningConfig.navigateToObjectsInLightning($objectName);
	$sfm_act_lightningConfig.addFieldsToLightningPageLayout($objectName,$pageLayoutForProfile,$fieldsAbsentInPage,$myDomain);
	_selectDomain();
	_selectWindow("Home | Salesforce");
	_closeWindow();
	_selectWindow();
}


var $x = $fieldsToMap.indexOf("Record Type");
if($x != -1) {
		$fieldsToMap[$x] = "Record Type ID";
}

$sfm_act_lightningConfig.logoutInLightning();
//Login and switch to lightning

$bo_act_login.login($g_url,$sfmlUsn,$sfmlPwd);
$sfm_act_lightningConfig.switchToLightning();

//**************************************************************************************************

//Navigate to servicemax setup and setup required process.

_setSpeed(3000);
$bo_act_navigation.navigateToSfmTransactionDesigner();
$sfm_act_SFM.selectSFM($process_to_clone,$isCustom);
_click($bo_pg_sfmTransactionAndDesigner.btn_clone);
_wait(60000, _isVisible($bo_pg_sfmTransactionAndDesigner.txt_name));
_setValue($bo_pg_sfmTransactionAndDesigner.txt_name, $processName);
_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmTransactionId,"");
_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmTransactionId,$processName);
_setSelected($bo_pg_sfmTransactionAndDesigner.list_objComboBox,$objectName);
if(_isVisible($bo_pg_sfmTransactionAndDesigner.btn_popUpOK)){
	_click($bo_pg_sfmTransactionAndDesigner.btn_popUpOK);
}
_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
$bo_act_navigation.designHeaderScreen($pageLayoutName,$tempFields);
_wait(2000);
_click($bo_pg_sfmTransactionAndDesigner.btn_quickSave1);

_wait(3000);
//Delete the mapped fields from the Page Layout to test the scenario of mapping without the fields in Page Layout.
_log("Delete the mapped fields from the Page Layout to test the scenario of mapping without the fields in Page Layout");
_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
for($i=0;$i<$fieldsToMap.length;$i++){
	if(_isVisible(_f("main").s_button("Remove this field").near(_f("main").uiftetextfield($fieldsToMap[$i])))){
		$bo_pg_sfmTransactionAndDesigner.deleteField($fieldsToMap[$i]);
	}
}
_click($bo_pg_sfmTransactionAndDesigner.btn_saveMap);
_click($bo_pg_sfmTransactionAndDesigner.btn_quickSave1);

$textLabels = ["Proforma Invoice Amount","Group Email","Estimated Duration","Automation Percent","Automation Phone","City","Street","Problem Description","Automation URL","Automation multipicklist"];
$textValues = ["6600","group123@group.com","78.00","45","2785401","Bengaluru","123 somewhere somehow somewat","This washing machine stopped working","www.servicemax.com","Multipicklist1;Multipicklist3"];
$picklistLabels = ["Account","Record Type ID","Clock Paused Forever","Scheduled Date","Automation Date2","Automation Date3","First Queued DateTime","Started Driving To Location Date Time","Completed Date Time","Finished Onsite Date Time","Order Status"];
$pickListValues = ["HCSAccountForTesting","Record Type1","true","Today","Tomorrow","Yesterday","Now","Today","Tomorrow","Yesterday","Open"];
//Create mapping for all possible standard data types.
_click($bo_pg_sfmTransactionAndDesigner.btn_qualifyingCriteriaAndFieldMapping);
$bo_act_mappings.createMapping($objectName,$mapType,$picklistLabels,$pickListValues,$textLabels,$textValues,$mapName);
_selectDomain();
_setSpeed(1000);

//Add the custom process to SFM wizard.
$sfm_act_wizards.addToWizard($objectName,$currentWizardName,"SFM",$processName);
_selectDomain();

//Navigate to created work order and launch the process
$bo_act_navigation.navigateToCreatedRecordUsingGlobalSearch($wo_number);
$sfm_act_createCustomWizard.clickWizardlinks($processName);
_wait(8000);
//Setting up the date literal values
var $current = new Date();
var $todayDate = $sfm_act_createCustomWizard.addSubtractDates($current,0);
var $tomorrowDate = $sfm_act_createCustomWizard.addSubtractDates($current,1);
var $yesterdayDate = $sfm_act_createCustomWizard.addSubtractDates($current,-1);
var $now = $sfm_act_lightningConfig.calculateNow();
_log("Value for now is "+$now);
//Removing preceding zeros in date fields to validate in work order object.
$todayDate = $sfm_act_lightningConfig.removePrecedingZeroInDate($todayDate);
$tomorrowDate = $sfm_act_lightningConfig.removePrecedingZeroInDate($tomorrowDate);
$yesterdayDate = $sfm_act_lightningConfig.removePrecedingZeroInDate($yesterdayDate);

_selectDomain($g_domain);
_click($sfm_pg_wo.link_delivery_save);
_wait(3000);
if(_isVisible($sfm_pg_wo.btn_okPriceNotCalculated)){
	_click($sfm_pg_wo.btn_okPriceNotCalculated);
}	
_selectDomain();
_wait(14000,_isVisible($sfm_pg_wo.label_wo));
$childWoId= _getText($sfm_pg_wo.label_wo);
_log("New Work Order id "+ $childWoId);

//Verify value map in the work order.
var $lookUpLabels = ["Account"];
var $lookUpValues = ["HCSAccountForTesting"];
$textLabels = ["Proforma Invoice Amount","Estimated Duration","Automation Percent","City","Scheduled Date","Automation Date2","Automation Date3"];
$textValues = ["$6,600.000","78.00","45%","Bengaluru",$todayDate,$tomorrowDate,$yesterdayDate];
$pickListLabels = ["Order Status"];
$pickListValues = ["Open"];
$textAreaLabels = ["Street","Problem Description"];
$textAreaValues = ["123 somewhere somehow somewat","This washing machine stopped working"];
var $checkBoxLabels = ["Clock Paused Forever"];
var $checkBoxValues = [true];
var $emailLabels = ["Group Email"];
var $emailValues = ["group123@group.com"];
var $multiPickLabels = ["Automation multipicklist","Automation multipicklist"];
var $multiPickValues = ["Multipicklist1","Multipicklist3"];
var $telephoneLabels = ["Automation Phone"];
var $telephoneValues = ["2785401"];
var $urlLabels = ["Automation URL"];
var $urlValues = ["www.servicemax.com"];
var $dateTimeLabels = ["First Queued DateTime","Started Driving To Location Date Time","Completed Date Time","Finished Onsite Date Time"];
var $dateTimeDateValues = [$todayDate,$todayDate,$tomorrowDate,$yesterdayDate];
var $timeValues =[$now,"12:00 AM","12:00 AM","12:00 AM"];
//Verify all values in the newly created Work order
var $res = $sfm_act_lightningConfig.verifyValues($textLabels, $textValues, $pickListLabels, $pickListValues, $textAreaLabels, $textAreaValues, $checkBoxLabels, $checkBoxValues, $dateTimeLabels, $dateTimeDateValues, $timeValues,$emailLabels,$emailValues,$lookUpLabels,$lookUpValues,$multiPickLabels,$multiPickValues,$urlLabels,$urlValues,$telephoneLabels,$telephoneValues);
_assertTrue($res);
if($res){
	_log("PASS: Work order has values as per value mapping for new records for Header");
}
else {
	_log("FAIL: Work order does not have values as per value mapping for new records for Header");
}
_selectDomain();
//Add the fields in the Screen designer
$sfm_act_createCustomWizard.clickWizardlinks($processName);
_selectDomain($g_domain);
_wait(20000);
_click($sfm_pg_wo.btn_arrowNextToUserSettings);
_assertVisible($sfm_pg_wo.link_launchSfmDesigner);
_click($sfm_pg_wo.link_launchSfmDesigner);
_selectDomain();
_selectWindow("/SFM Transaction Designer/");
_wait(12000);
_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
_wait(10000);
$bo_act_navigation.designHeaderScreen($pageLayoutName, $fieldsToMap);
_click($bo_pg_sfmTransactionAndDesigner.btn_quickSave1);
_wait(2000);
_closeWindow();
_selectWindow();
_selectDomain($g_domain);
$sfm_act_lightningConfig.clearServicemaxCache();
//Setting up the date literal values
var $current = new Date();
var $todayDate = $sfm_act_createCustomWizard.addSubtractDates($current,0);
var $tomorrowDate = $sfm_act_createCustomWizard.addSubtractDates($current,1);
var $yesterdayDate = $sfm_act_createCustomWizard.addSubtractDates($current,-1);
//Calculating current time

var $now = $sfm_act_lightningConfig.calculateNow();
_log("Value for now is "+$now);
//Verify values in SFM Delivery screen
var $current = new Date();
var $todayDate = $sfm_act_createCustomWizard.addSubtractDates($current,0);
var $tomorrowDate = $sfm_act_createCustomWizard.addSubtractDates($current,1);
var $yesterdayDate = $sfm_act_createCustomWizard.addSubtractDates($current,-1);
var $deliveryTextPickLabels = ["Account","Proforma Invoice Amount","Scheduled Date","Automation Date2","Automation Date3","First Queued DateTime","Started Driving To Location Date Time","Completed Date Time","Finished Onsite Date Time","Group Email","Estimated Duration","Automation Percent","Automation Phone","City","Automation URL"];
var $deliveryTextPickValues =["HCSAccountForTesting","6600",$todayDate,$tomorrowDate,$yesterdayDate,$todayDate,$todayDate,$tomorrowDate,$yesterdayDate,"group123@group.com","78","45","2785401","Bengaluru","www.servicemax.com"];
var $deliveryTimeLabels = ["First Queued DateTime","Started Driving To Location Date Time","Completed Date Time","Finished Onsite Date Time"];
var $deliveryTimeValues = [$now,"12:00 AM","12:00 AM","12:00 AM"];
//Verify same values in Work order after saving
_selectDomain($g_domain);
var $verifyResult = $sfm_act_SFM.verifyValuesInDelivery($deliveryTextPickLabels, $deliveryTextPickValues, $deliveryTimeLabels, $deliveryTimeValues, $textAreaLabels, $textAreaValues, $checkBoxLabels, $checkBoxValues, $multiPickLabels, $multiPickValues);
_click($sfm_pg_wo.link_delivery_save);
_wait(3000);
if(_isVisible($sfm_pg_wo.btn_okPriceNotCalculated)){
	_click($sfm_pg_wo.btn_okPriceNotCalculated);
}
_assertTrue($verifyResult);
if($verifyResult){
	_log("PASS: Work order has values as per value mapping for new records for Header in delivery");
}
else {
	_log("FAIL: Work order does not have values as per value mapping for new records for Header in delivery");
}

_selectDomain();
_wait(14000,_isVisible($sfm_pg_wo.label_wo));
//Removing preceding zeros in date fields to validate in work order object.
$todayDate = $sfm_act_lightningConfig.removePrecedingZeroInDate($todayDate);
$tomorrowDate = $sfm_act_lightningConfig.removePrecedingZeroInDate($tomorrowDate);
$yesterdayDate = $sfm_act_lightningConfig.removePrecedingZeroInDate($yesterdayDate);
$timeValues =[$now,"12:00 AM","12:00 AM","12:00 AM"];
var $res = $sfm_act_lightningConfig.verifyValues($textLabels, $textValues, $pickListLabels, $pickListValues, $textAreaLabels, $textAreaValues, $checkBoxLabels, $checkBoxValues, $dateTimeLabels, $dateTimeDateValues, $timeValues,$emailLabels,$emailValues,$lookUpLabels,$lookUpValues,$multiPickLabels,$multiPickValues,$urlLabels,$urlValues,$telephoneLabels,$telephoneValues);
_assertTrue($res);
if($res){
	_log("PASS: Work order has values as per value mapping for new records for Header");
}
else {
	_log("FAIL: Work order does not have values as per value mapping for new records for Header");
}



$RS_10470.end();

