var $RS_10472 = _testcase("RS_10472","Verify Field Map for existing records - Header");
$RS_10472.start();
//Variables used
var $object_name = "Work Order";
var $processName = "RS_10472";
var $process_to_clone = "Create Follow-Up Work Order from Work Order";
var $sfmTemplate = "SVMXSTD: Manage WO Usage Lines";
var $isCustom = false;
var $ctr = 0;
var $i = 0;
var $success_message = "Work Order was saved.";
var $containerName = [];
var $fieldName=[];
var $fieldsToMap = ["Account","Sub Status","Actual Onsite Response","Record Type ID","Clock Paused Forever","Proforma Invoice Amount","Scheduled Date","Group Email","Estimated Duration","Order Status","City","Street","Problem Description"];
var $containerName = ["Work Order","Work Order","Work Order","Work Order","Work Order","Work Order","Work Order","Work Order","Work Order","Work Order","Work Order","Work Order","Work Order"];
var $currentWizardName = $wizardName[4];
var $productName = "Chrome";
var $lineType = "Parts";
var $fieldsAbsentInPage = [];
var $pageLayoutForProfile = "SVMX Work Order - Admin";
var $myDomain = "/lightning/";

//Appending current timestamp to process name to make it unique.
var $timeStamp = $bo_act_navigation.getCurrentTimeStamp();
$processName = $processName + "_" + $timeStamp;
var $pageLayoutName = $processName + "pg";
var $mapName = $processName + "mp";

//**************************************************************************************
//Login and switch to lightning
//$bo_act_login.login($g_url,$bac_un,$bac_pwd);
$bo_act_login.login($g_url,$sfmUsn,$sfmPwd);
$sfm_act_lightningConfig.switchToLightning();

//Navigate to servicemax setup and setup required process.
//Clone standard process and add the dependent picklist in the screen designer
_setSpeed(3000);
$bo_act_navigation.navigateToSfmTransactionDesigner();
$sfm_act_SFM.selectSFM($process_to_clone,false);
_click($bo_pg_sfmTransactionAndDesigner.btn_clone);
_wait(60000, _isVisible($bo_pg_sfmTransactionAndDesigner.txt_name));
_setValue($bo_pg_sfmTransactionAndDesigner.txt_name, $processName);
_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmTransactionId,"");
_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmTransactionId,$processName);
//_click($bo_pg_sfmTransactionAndDesigner.btn_quickSave1);
_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
_setValue($bo_pg_sfmTransactionAndDesigner.txt_sfmSavePageLayoutAs, $pageLayoutName);
_wait(3000);
_click($bo_pg_sfmTransactionAndDesigner.btn_pageLayoutSave);
_wait(3000, _isVisible(_f("main").label("Page saved")));
_wait(3000);
//Delete the mapped fields from the Page Layout to test the scenario of mapping without the fields in Page Layout.
_log("Delete the mapped fields from the Page Layout to test the scenario of mapping without the fields in Page Layout");
_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
for($i=0;$i<$fieldsToMap.length;$i++){
	if(_isVisible(_f("main").s_button("Remove this field").near(_f("main").uiftetextfield($fieldsToMap[$i])))){
		$bo_pg_sfmTransactionAndDesigner.deleteField($fieldsToMap[$i]);
	}
}
_click($bo_pg_sfmTransactionAndDesigner.btn_quickSave);
_click($bo_pg_sfmTransactionAndDesigner.btn_quickSave1);

//Create mapping for all possible standard data types.
_click($bo_pg_sfmTransactionAndDesigner.btn_qualifyingCriteriaAndFieldMapping);
$bo_act_mappings.createMapping("Work Order",$fieldsToMap,$fieldsToMap,[],[],$mapName);
_selectDomain();
_setSpeed(1000);

//Add the custom process to SFM wizard.
$sfm_act_wizards.addToWizard($object_name,$currentWizardName,"SFM",$processName);
_selectDomain();

var $wo_number = $sfm_act_createCustomWizard.createWowithdateliterals();
var $wlNumber = $sfm_act_lightningConfig.createWorkDetailInLightning("Usage",$lineType);
//Add all needed details to the parent work order
var $x = $fieldsToMap.indexOf("Record Type ID");
if($x != -1) {
		$fieldsToMap[$x] = "Record Type";
}
//First find if all the fields are present in the current page layout. 
//Take the list of fields that are not present.
$bo_act_navigation.navigateToCreatedRecordUsingGlobalSearch($wo_number);
for($i=0;$i<$fieldsToMap.length;$i++){
	if(!$sfm_act_lightningConfig.findIfFieldPresentInPageLayout($fieldsToMap[$i])){
		$fieldsAbsentInPage.push($fieldsToMap[$i]);
	}	
}
_log($fieldsAbsentInPage);
//Record Type id is knows as Record Type in page layouts
var $x = $fieldsAbsentInPage.indexOf("Record Type ID");
if($x != -1) {
		$fieldsAbsentInPage[$x] = "Record Type";
}

//If there are fields not present in field layout , add them in object manager.
if($fieldsAbsentInPage.length > 0){
	$sfm_act_lightningConfig.navigateToObjectsInLightning($object_name);
	$sfm_act_lightningConfig.addFieldsToLightningPageLayout($object_name,$pageLayoutForProfile,$fieldsAbsentInPage,$myDomain);
	_selectDomain();
	_selectWindow("Home | Salesforce");
	_closeWindow();
	_selectWindow();
}

$bo_act_navigation.navigateToCreatedRecordUsingGlobalSearch($wo_number);
var $textLabels = ["Proforma Invoice Amount","Scheduled Date","Estimated Duration","City"];
var $textValues = ["6600","4/21/2018","345","Bengaluru"];
var $pickListLabels = ["Order Status","Sub Status"];
var $pickListValues = ["Completed","Unresolved"];
var $textAreaLabels = ["Street","Problem Description"];
var $textAreaValues = ["123 somestreet,walnut corner","This machines gets stuck while printing"];
var $checkBoxLabels = ["Clock Paused Forever"];
var $checkBoxValues = ["true"];
var $dateTimeLabels = ["Actual Onsite Response"];
var $dateTimeDateValues = ["4/11/2018"];
var $timeValues = ["3:30 PM"];
var $emailLabels = ["Group Email"];
var $emailValues = ["groupemail@group.com"];
_wait(2000);
$sfm_act_lightningConfig.editWorkOrder($textLabels, $textValues, $pickListLabels, $pickListValues, $textAreaLabels, $textAreaValues, $checkBoxLabels, $checkBoxValues, $dateTimeLabels, $dateTimeDateValues, $timeValues,$emailLabels,$emailValues);

//Launch the process in SFM Delivery
$sfm_act_createCustomWizard.clickWizardlinks($processName);
_wait(8000);
_selectDomain($domainName);

//Verify all the values without the fields in the page layout.
_click($sfm_pg_wo.link_delivery_save);
_selectDomain();
_wait(14000,_isVisible($sfm_pg_wo.label_wo));
$childWoId= _getText($sfm_pg_wo.label_wo);
_log("Child Work Order id "+ $childWoId);
$textValues = ["$6,600.000","4/21/2018","345","Bengaluru"];
var $lookUpLabels = ["Account"];
var $lookUpValues = ["HCSAccountForTesting"];
//Verify all values in the newly created Work order
var $res = $sfm_act_lightningConfig.verifyValues($textLabels, $textValues, $pickListLabels, $pickListValues, $textAreaLabels, $textAreaValues, $checkBoxLabels, $checkBoxValues, $dateTimeLabels, $dateTimeDateValues, $timeValues,$emailLabels,$emailValues,$lookUpLabels,$lookUpValues);
_assertTrue($res);
if($res){
	_log("PASS: Newly created follow up order has values as per mapping");
}
else {
	_log("FAIL: Newly created follow up order does not have values as per mapping");
}
_selectDomain();
//Add the fields in the Screen designer
$sfm_act_createCustomWizard.clickWizardlinks($processName);
_selectDomain($domainName);
_click($sfm_pg_wo.btn_arrowNextToGetPrice);
_assertVisible($sfm_pg_wo.link_launchSfmDesigner);
_click($sfm_pg_wo.link_launchSfmDesigner);
_selectDomain();
_selectWindow("/SFM Transaction Designer/");
_wait(10000);
_click($bo_pg_sfmTransactionAndDesigner.btn_screenDesigner);
$sfm_act_SFM.addFieldToScreen($fieldsToMap, $containerName);
_click($bo_pg_sfmTransactionAndDesigner.btn_quickSave1);
_wait(2000);
_closeWindow();
_selectWindow();
_selectDomain($domainName);
$sfm_act_lightningConfig.clearServicemaxCache();
//Verifying values in SFM Delivery
var $textPicklistDateLabels = [];
var $textPicklistDateExpValues = [];
for($i=0;$i<$textLabels.length;$i++){
	$textPicklistDateLabels.push($textLabels[$i]);
	$textPicklistDateExpValues.push($textValues[$i]);
}
for($i=0;$i<$pickListLabels.length;$i++){
	$textPicklistDateLabels.push($pickListLabels[$i]);
	$textPicklistDateExpValues.push($pickListValues[$i]);
}
for($i=0;$i<$dateTimeLabels.length;$i++){
	$textPicklistDateLabels.push($dateTimeLabels[$i]);
	$textPicklistDateExpValues.push($dateTimeDateValues[$i]);
}

$verifyResult = $sfm_act_SFM.verifyValuesInDelivery($textPicklistDateLabels, $textPicklistDateExpValues, $dateTimeLabels, $timeValues,$textAreaLabels,$textAreaValues, $checkBoxLabels,checkBoxValues);
_assertTrue($verifyResult);
if($verifyResult){
	_log("PASS:Follow up Work order values are verified in SFM Delivery");
}
else {
	_log("FAIL:Follow up Work order values not verified in SFM Delivery");
}

//Now Save the SFM Delivery and verify the values in the newly created work order
_click($sfm_pg_wo.link_delivery_save);
_selectDomain();
_wait(7000,_isVisible($sfm_pg_wo.label_wo));
$childWoId= _getText($sfm_pg_wo.label_wo);
_log("Child Work Order id "+ $childWoId);
$res = $sfm_act_lightningConfig.verifyValues($textLabels, $textValues, $pickListLabels, $pickListValues, $textAreaLabels, $textAreaValues, $checkBoxLabels, $checkBoxValues, $dateTimeLabels, $dateTimeDateValues, $timeValues);
_assertTrue($res);
if($res){
	_log("PASS: Newly created follow up order has values as per mapping");
}
else {
	_log("FAIL: Newly created follow up order does not have values as per mapping");
}
$sfm_act_lightningConfig.logoutInLightning();
$RS_10472.end();