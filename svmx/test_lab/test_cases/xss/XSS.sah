_setSpeed(100);
//Pass the Attack Values
var $attackTag = "<img  src=p onerror=alert(123)>";
var $attackTagSelectionField = "/img src=p/"
//	Pass the URl/Page Locations
var $urlArray = $excel.readFromCustomExcel("../xss/xss_excelData/xssData.xlsx","Sheet1", false, true)
//var $urlArray =["https://svmxc.na40.visual.force.com/apex/SVMXC__SPM_configuration"];
$bo_act_login.login("https://login.salesforce.com", "yadav.thyagaraj@ge.com","Svmx123#")

var $urlCount = 0;
var int = 0;
var $url ;
var $t;
//Create a table for output report

runScan();

_logOutput("URL Scanned " + $urlCount + 1 + " Of Total : "+ $urlArray.length);


function runScan() {

	for (int = 0; int < $urlArray.length; int++) {
		
		$urlCount = int;
		$url = $urlArray[int]["URL"];
		_log("SCANNED PAGE : [ " + $url + " ]");
		_navigateTo($url);
		_call(top.location.reload(true));
		_wait(2000);
		_continueOnError();

		captureAttack();

		// Collect and naviagte through Tabs if present and set all the fields
		// for
		// each page
		_selectWindow();
		if (_exists(_span("/svmx-tab/"))) {
			var $tabbing = _collect("_span", "/svmx-tab/");

		} else {

			var $tabbing = _collect("_cell", "/rich-tab-header/");
		}

		_log("Collected Spans = " + $tabbing.length);
		// To avoid Tabbing in non tabbed pages
		if ($tabbing.length == 0) {
			var $tabs = 1;
			var skipFlag = 1;
		} else {
			var $tabs = $tabbing.length;
			var skipFlag = 0;
		}

		// Select a Tab
		for (var $s = 0; $s < $tabs; $s++) {
			_setStrictVisibilityCheck(true);
			
		
				_disableDefaultErrorLogging();
				_maskLogs();
				if (skipFlag != 1) {
					if (_exists($tabbing[$s])) {
						try{
						$t = _getText($tabbing[$s]);
						_click($tabbing[$s]);
						
						captureAttack( $t);
						_log("in TAB ******************* " + $t + "****");
						}catch(e){}
					}
					
				}
			
			_unmaskLogs();
			_enableDefaultErrorLogging();

			// Initial check
			captureAttack();
				outerNewPageActions();
			captureAttack();
				innerNewPageActions();
			captureAttack();
				attackTextbox();
				attackTextArea();
				attackSelection();
				attackSelectionEditable();
				postPageActions();
			captureAttack();

		}

	}

}

function outerNewPageActions() {
	$buttonArray = [ "/New/", "/Add/", "/edit-icon/" ];

	$buttonArray.forEach(function newPageActions($buttonName, $index) {
		_log("Outer Page Action on Button : "+$buttonName);
		_setStrictVisibilityCheck(true);
try{
		captureAttack();
		//This is 1st set of if-else
		if (_exists(_button($buttonName))) {
			_click(_button($buttonName));
		}

		else if (_exists(_span($buttonName))) {
			_click(_span($buttonName));
		}

		else if (_exists(_link($buttonName))) {
			_click(_link($buttonName));
		}

		else if (_exists(_image($buttonName))) {
			_click(_image($buttonName));
		}
}catch(e){}

		
	
		_setStrictVisibilityCheck(false);

	});
	captureAttack();
}

function innerNewPageActions() {
	$buttonArray = [ "/New/", "/Add/", "/edit-icon/" ];

	$buttonArray.forEach(function newPageActions($buttonName, $index) {
		_log("Inner Page Action on Button : "+$buttonName);
	
		_setStrictVisibilityCheck(true);	
	try{	
		//After selecting a profile new set of buttons will appear
		if (_exists(_textbox("/Select a profile/"))) {
			_click(_textbox("/Select a profile/"));
			_click(_listItem("/Default/"));
		}else{
			//do nothing
		}
		
		
		//This is 2nd set of if-else
		 if (_exists(_button($buttonName))) {
			_click(_button($buttonName));
		}

		else if (_exists(_span($buttonName))) {
			_click(_span($buttonName));
		}

		else if (_exists(_link($buttonName))) {
			_click(_link($buttonName));
		}

		else if (_exists(_image($buttonName))) {
			_click(_image($buttonName));
		}
	}catch(e){}

		_setStrictVisibilityCheck(false);
		
	});
	captureAttack();
}

function postPageActions() {

	$buttonArray = [ "/Update/", "/Save/", "Quick Save", "OK", "Ok",
	                 "svmx-tool-close" ];

	$buttonArray.forEach(function newPageActions($buttonName, $index) {
		try{
		_log("Post Page Action on Button : "+$buttonName);
		_setStrictVisibilityCheck(true);
		if (_exists(_span($buttonName))) {
			_click(_span($buttonName));

		}

		else if (_exists(_button($buttonName))) {
			_click(_button($buttonName));

		}

		else if (_exists(_link($buttonName))) {
			_click(_link($buttonName));

		} 
		else if (_exists(_image($buttonName))) {
			_click(_image($buttonName));

		}
		
		}catch(e){}

		_setStrictVisibilityCheck(false);

			});
	captureAttack();

}

function killWindow() {
	_selectWindow();
	var $recWin = _getRecentWindow().windowTitle;
	var $winExists = _windowExists($recWin,5000);
	_log("Recent Windows : "+$recWin+" Win Exits = "+$winExists);
	
	if ($winExists) {
		try{
			_selectWindow(""+$recWin);
			_closeWindow();
		}catch(e){}
	}
	
	_selectWindow();
	_focusWindow();

}

function captureAttack() {
	
	_log("************************************");
	var $allAlerts = _lastAlert(true);
	if ($allAlerts == null || $allAlerts == "") {
		_log("SCANNED PAGE : [ " + $url  + " ] No Alerts Caught","CUSTOM2");

	} else {

		var $logStr = " <br>  SCANNED PAGE : [ " + $url + " ] Location = "+$t+" : REFER SCREENSHOTS : Alerts Caught : " + $allAlerts+"</br> ";
		_log($logStr, "FAILURE");
		_logExceptionAsFailure($logStr);
//		_lockWindow();
//		_focusWindow();
//		_takePageScreenShot();
//		_unlockWindow();
		_logOutput($logStr);
		_clearLastAlert();

	}
	_log("************************************");
	
	killWindow();

}



function attackTextbox() {
	_selectWindow();

	var $textboxes = _collect("_textbox", "/svmx-textfield||svmx-form-text/");
	_log("Collected $textboxes = " + $textboxes.length);
	// Iterate and set values on all textboxes and also textcombo/selection
	// boxes
	for (var $i = 0; $i < $textboxes.length; $i++) {
try{
	
			_disableDefaultErrorLogging();
			_maskLogs();
			_setValue($textboxes[$i], $attackTag);
			_unmaskLogs();
			_enableDefaultErrorLogging();

	
		// For Selection/ComboBox
		
			if (_exists(_listItem($attackTag))) {
				_disableDefaultErrorLogging();
				_maskLogs();
				_click(_listItem($attackTag));
				_unmaskLogs();
				_enableDefaultErrorLogging();

			}
}catch(e){}
	

	}

}

function attackTextArea() {
	_selectWindow();

	var $textarea = _collect("_textarea", "/.*/");
	_log("Collected $textarea = " + $textarea.length);

	// Iterate and set values on all text areas
	for (var $i = 0; $i < $textarea.length; $i++) {
try{
		
			_disableDefaultErrorLogging();
			_maskLogs();
			_setValue($textarea[$i], $attackTag);
			_unmaskLogs();
			_enableDefaultErrorLogging();

	}catch(e){}
		
	}

}

function attackSelectionEditable() {
	_selectWindow();

	var $cell = _collect("_cell", "/x-grid-cell/");
	_log("Collected $cell = " + $cell.length);

	// Iterate and set values on all editable selections
	for (var $i = 0; $i < $cell.length; $i++) {
try{
		
			if (_exists($cell[$i])) {
				_disableDefaultErrorLogging();
				_maskLogs();
				_doubleClick($cell[$i]);
				_call($cell[$i].innerHTML = $attackTag);
				_unmaskLogs();
				_enableDefaultErrorLogging();

			}
}catch(e){}
	
	}

}

function attackSelection() {
	_selectWindow();

	var $select = _collect("_select", "/.*/");
	_log("Collected $select = " + $select.length);

	// Iterate and set values on all editable selections
	for (var $i = 0; $i < $select.length; $i++) {
try{
		

			if (_exists($select[$i])) {
				_disableDefaultErrorLogging();
				_maskLogs();
				_setSelected($select[$i], $attackTagSelectionField);
				_unmaskLogs();
				_enableDefaultErrorLogging();
			}

}catch(e){}
	}

}
