_setSpeed(100);
//Pass the Attack Values
var $attackTag = "<img  src=p onerror=alert(123)>";
var $attackTagSelectionField = "/img src=p/"
// Pass the URl/Page Locations
var $urlArray = $excel.readFromCustomExcel("../xss/xss_excelData/xssData.xlsx","Sheet1", false, true)

$bo_act_login.login("https://login.salesforce.com", "yadav.thyagaraj@ge.com",
		"Svmx123#")

for (var int = 0; int < $urlArray.length; int++) {
	_navigateTo($urlArray[int]["URL"]);
	_wait(5000);
	_continueOnError();
	captureAttack();

	// Collect and naviagte throug Tabs if present and set all the fields for
	// each page
	_selectWindow();
	if (_isVisible(_span(/x-tab-inner/))) {
		var $tabbing = _collect("_span", "/x-tab-inner/");

	} else {

		var $tabbing = _collect("_cell", "/rich-tab-header/");
	}

	_log("Collected Spans = " + $tabbing.length);
	// To avoid Tabbing in non tabbed pages
	if ($tabbing.length == 0) {
		var $tabs = 1;
		var skipFlag = 1;
	} else {
		var $tabs = $tabbing.length;
		var skipFlag = 0;
	}

	// Select a Tab
	for (var $s = 0; $s < $tabs; $s++) {
		try {
			if (skipFlag != 1) {
				_click($tabbing[$s]);
				var $t = _getText($tabbing[$s]);
				_log("in TAB ******************* " + $t + "****");
			}
		} catch (e) {

		}

		// Initial check
		captureAttack();
		_setStrictVisibilityCheck(true);
		if (_isVisible(_button("/New/"))) {
			_click(_button("/New/"));
			_setStrictVisibilityCheck(false);
			captureAttack();
		}
		
		_setStrictVisibilityCheck(true);
		if (_isVisible(_span("New"))) {
			_click(_span("New"));
			_setStrictVisibilityCheck(false);
			captureAttack();
		}
		
		_setStrictVisibilityCheck(true);
		if (_isVisible(_span("Add New"))) {
			_click(_span("Add New"));
			_setStrictVisibilityCheck(false);
			captureAttack();
		}
		
		_setStrictVisibilityCheck(true);
		if (_isVisible(_span("Add"))) {
			_click(_span("Add"));
			_setStrictVisibilityCheck(false);
			captureAttack();
		}
		_setStrictVisibilityCheck(true);
		if (_isVisible(_button("/Add/"))) {
			_click(_button("/Add/"));
			_setStrictVisibilityCheck(false);
			captureAttack();
		}
		if (_isVisible(_textbox("Select a profile:"))) {
			_click(_textbox("Select a profile:"));
			_click(_listItem("Default Group Profile"));
			captureAttack();
		}
		
		_setStrictVisibilityCheck(true);
		if (_isVisible(_span("Add"))) {
			_click(_span("Add"));
			_setStrictVisibilityCheck(false);
			captureAttack();
		}
	

		_setStrictVisibilityCheck(true);
		if (_isVisible(_span("Add"))) {
			_click(_span("Add"));
			_setStrictVisibilityCheck(false);
			captureAttack();
		}
	
		attackTextbox();
		attackTextArea();
		attackSelection();
		attackSelectionEditable();

		if (_isVisible(_image("svmx-tool-close"))) {
			_click(_image("svmx-tool-close"));
			captureAttack();

		}
		
		if (_isVisible(_span("Save"))) {
			_click(_span("Save"));
			captureAttack();
		}
		

		if (_isVisible(_button("Quick Save"))) {
			_click(_button("Quick Save"));
			captureAttack();
		}

		if (_isVisible(_button("Save"))) {
			_click(_button("Save"));
			captureAttack();
		}

		_wait(3000);

	}
	//Close a pop up window
	if(_windowExists("/handshake alert/")){
	_selectWindow("/handshake alert/");
	_closeWindow();
	}
	_logOutput("URL Scanned : "+int+"Of Total : "+$urlArray.length);
}

function captureAttack() {
	_log("************************************");
	var $allAlerts = _lastAlert(true);
	if ($allAlerts == null || $allAlerts == "") {
		_log("SCANNED PAGE : [ " + $urlArray[int] + " ] No Alerts Caught")
	} else {

		_lockWindow();
		_focusWindow();
		_takePageScreenShot();
		_unlockWindow();
		_clearLastAlert();
		var $logStr = "SCANNED PAGE : [ " + $urlArray[int]
				+ " ] Alerts Caught : " + $allAlerts;
		_logOutput($logStr);
		_logExceptionAsFailure($logStr);

	}
	_log("************************************");
	
}

function attackTextbox() {
	var $textboxes = _collect("_textbox", "/svmx-textfield||svmx-form-text/");
	_log("Collected $textboxes = " + $textboxes.length);
	// Iterate and set values on all textboxes and also textcombo/selection
	// boxes
	for (var $i = 0; $i < $textboxes.length; $i++) {

		try {
			_setValue($textboxes[$i], $attackTag);
				captureAttack();
			
		} catch (e) {

		}
		

		// For Selection/ComboBox
		try {
			if (_isVisible(_listItem($attackTag))) {
				_click(_listItem($attackTag));
				captureAttack();
			}

		} catch (e) {

		}

	}
}

function attackTextArea() {
	var $textarea = _collect("_textarea", "/.*/");
	_log("Collected $textarea = " + $textarea.length);

	// Iterate and set values on all text areas
	for (var $i = 0; $i < $textarea.length; $i++) {
		try {
			_setValue($textarea[$i], $attackTag);
				captureAttack();
			
			
		} catch (e) {

		}
		
	}
}

function attackSelectionEditable() {
	var $cell = _collect("_cell", "/x-grid-cell/");
	_log("Collected $cell = " + $cell.length);

	// Iterate and set values on all editable selections
	for (var $i = 0; $i < $cell.length; $i++) {
		try {
			if (_isVisible($select[$i])) {
			_doubleClick($cell[$i]) ;
				_call($cell[$i].innerHTML = $attackTag);
				captureAttack();
			
			}

		} catch (e) {

		}
		
	}
}

function attackSelection() {
	var $select = _collect("_select", "/.*/");
	_log("Collected $select = " + $select.length);

	// Iterate and set values on all editable selections
	for (var $i = 0; $i < $select.length; $i++) {
		try {

			if(_isVisible($select[$i])) {
				_setSelected($select[$i], $attackTagSelectionField);
					captureAttack();
				
			}

		} catch (e) {

		}
		
	}
}