_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo"), "Not Equal");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textip"), "test");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[1]"), "Not Equal");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textip[1]"), "hello");
_click(_f("SFMExpressionBuilderSWF").s_button("+"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Acknowledged By Technician Date Time");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo"), "Not Equal");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textip"), "test");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Acknowledged By Technician Date Time");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[1]"), "Not Equal");
_setValue(_f("SFMExpressionBuilderSWF").datefield("picker"), "Thu Nov 30 00:00:00 GMT+0530 2017");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[2]"), "Greater Than");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textip[1]"), "test");
_click(_f("SFMExpressionBuilderSWF").s_button("+"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[3]"), "Actual Onsite Response");
_setValue(_f("SFMExpressionBuilderSWF").datefield("picker[1]"), "Thu Nov 23 00:00:00 GMT+0530 2017");
_setValue(_f("SFMExpressionBuilderSWF").datefield("picker[1]"), "Thu Nov 23 00:00:00 GMT+0530 2017");
_click(_f("SFMExpressionBuilderSWF").s_button("Reset"));
_click(_f("SFMExpressionBuilderSWF").s_button("+"));
_click(_f("SFMExpressionBuilderSWF").s_button("-[2]"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Initial Response");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Acknowledged By Technician Date Time");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Acknowledged By Technician Date Time");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Initial Response");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Initial Response");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Onsite Response");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Resolution");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Restoration");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Age");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Age Bucket");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Apply Business Hours For OptiMax");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Appointment Type");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Auto Entitlement Status");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Batch Update");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Billing Type");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Booked Appointment Slot");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Canceled Date Time");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Case");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "City");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Clock Paused Forever");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Closed By");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Closed On");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Completed Date Time");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Component");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Contact");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Country");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Created By ID");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Created Date");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Customer Down");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Customer Down Status");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Deleted");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Dependency Group");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Dispatch Now");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Time to Resolve (in Minutes)");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[4]"), "Actual Initial Response");
_setValue(_f("SFMExpressionBuilderSWF").datefield("picker"), "Thu Nov 30 00:00:00 GMT+0530 2017");
_setValue(_f("SFMExpressionBuilderSWF").datefield("picker"), "Fri Dec 1 00:00:00 GMT+0530 2017");
_click(_f("SFMExpressionBuilderSWF").s_button("-[1]"));
_click(_f("SFMExpressionBuilderSWF").s_button("+"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Onsite Response");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[4]"), "Actual Onsite Response");
_setValue(_f("SFMExpressionBuilderSWF").datefield("picker"), "Wed Nov 1 00:00:00 GMT+0530 2017");
_setValue(_f("SFMExpressionBuilderSWF").datefield("picker"), "Wed Nov 1 00:00:00 GMT+0530 2017");
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list[1]"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo"), "Today");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[5]"), "Today");
_click(_f("SFMExpressionBuilderSWF").s_button("+"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Appointment Type");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Canceled Date Time");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Closed By");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Country");
_click(_f("SFMExpressionBuilderSWF").s_button("-[2]"));
_click(_link("Home"));
_click(_link("ServiceMax Setup"));
_click(_div("Service Flow Manager"));
_click(_div("middle[43]"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("Select a source object"), "Work Order");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("searchCombo"), "Select expression");
_click(_f("SFMExpressionBuilderSWF").s_button("New"));
_click(_f("SFMExpressionBuilderSWF").s_button("-[1]"));
_click(_f("SFMExpressionBuilderSWF").s_button("Delete"));
_click(_f("SFMExpressionBuilderSWF").s_button("New"));
_click(_f("SFMExpressionBuilderSWF").s_button("-[1]"));
_click(_f("SFMExpressionBuilderSWF").s_button("Delete"));
_click(_link("Home"));
_click(_link("ServiceMax Setup"));
_click(_div("Service Flow Manager"));
_click(_div("SFM Mappings"));
_click(_link("Home"));
_click(_link("ServiceMax Setup"));
_click(_div("Service Flow Manager"));
_click(_div("middle[43]"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("Select a source object"), "Work Order");
_click(_f("SFMExpressionBuilderSWF").s_button("New"));
_click(_f("SFMExpressionBuilderSWF").s_button("+"));
_click(_f("SFMExpressionBuilderSWF").s_button("-[2]"));
_click(_f("SFMExpressionBuilderSWF").s_button("+"));
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[2]"), "Select");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[1]"), "Contains");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textip[1]"), "Hello");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[2]"), "Not Equal");
_click(_f("SFMExpressionBuilderSWF").s_button("+"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[3]"), "Actual Initial Response");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[3]"), "Greater Than");
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list[3]"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo"), "Today");
_click(_f("SFMExpressionBuilderSWF").s_button("Reset"));
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[4]"), "Select");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[4]"), "Select");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo"), "Order Status");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Order Type");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Order Status");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[1]"), "Not Equal");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo"), "Canceled");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Actual Initial Response");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[2]"), "Not Equal");
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list[1]"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo[1]"), "Today");
_click(_f("SFMExpressionBuilderSWF").s_button("Save"));
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textip[1]"), "");
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list"));
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list"));
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list"));
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to enter a specific value for this field[2]"));
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to enter a specific value for this field[1]"));
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to enter a specific value for this field"));
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list[2]"));
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[7]"), "Now");
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list[1]"));
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[6]"), "Order Status");
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list[1]"));
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to enter a specific value for this field[1]"));
