_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[2]"), "Select");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo"), "Contains");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[2]"), "Select");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Account Picklist");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Actual Initial Response");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[3]"), "Account Picklist");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo"), "Contains");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo"), "Contains");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo"), "Account");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo"), "Contains");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textip"), "Online");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Initial Response");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[4]"), "Actual Initial Response");
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list[1]"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo"), "Today");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[5]"), "Today");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Order Status");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[6]"), "Order Status");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[2]"), "Not Equal");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[2]"), "Not Equal");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo[1]"), "Canceled");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[3]"), "Order Type");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[8]"), "Order Type");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo[2]"), "Field Service");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textip"), "Online");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[1]"), "Actual Initial Response");
_click(_f("SFMExpressionBuilderSWF").s_togglebutton("I want to choose a field from the list[1]"));
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo"), "Today");
_setValue(_f("SFMExpressionBuilderSWF").s_textinput("textInput[5]"), "Today");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[2]"), "Order Status");
_setSelected(_f("SFMExpressionBuilderSWF").s_dropdownlist("conditionsCombo[2]"), "Not Equal");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo[1]"), "Canceled");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo[3]"), "Order Type");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("valuesCombo[2]"), "Field Service");
_setSelected(_f("SFMExpressionBuilderSWF").s_combobox("fieldCombo"), "Edur");
